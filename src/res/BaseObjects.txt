OBJECT Table 3 Payment Terms
{
  OBJECT-PROPERTIES
  {
    Date=03/24/19;
    Time=12:00:00 PM;
    Version List=NAVW114.00,NAVNA14.00;
  }
  PROPERTIES
  {
    DataCaptionFields=Code,Description;
    OnInsert=BEGIN
               SetLastModifiedDateTime;
             END;

    OnModify=BEGIN
               SetLastModifiedDateTime;
             END;

    OnDelete=VAR
               PaymentTermsTranslation@1000 : Record 462;
               O365SalesInitialSetup@1001 : Record 2110;
             BEGIN
               IF IdentityManagement.IsInvAppId THEN
                 IF O365SalesInitialSetup.GET AND
                    (O365SalesInitialSetup."Default Payment Terms Code" = Code)
                 THEN
                   ERROR(CannotRemoveDefaultPaymentTermsErr);

               WITH PaymentTermsTranslation DO BEGIN
                 SETRANGE("Payment Term",Code);
                 DELETEALL
               END;
             END;

    OnRename=BEGIN
               SetLastModifiedDateTime;
             END;

    CaptionML=[ENU=Payment Terms;
               ESM=T‚rminos pago;
               FRC=Modalit‚s de paiement;
               ENC=Payment Terms];
    LookupPageID=Page4;
  }
  FIELDS
  {
    { 1   ;   ;Code                ;Code10        ;CaptionML=[ENU=Code;
                                                              ESM=C¢digo;
                                                              FRC=Code;
                                                              ENC=Code];
                                                   NotBlank=Yes }
    { 2   ;   ;Due Date Calculation;DateFormula   ;CaptionML=[ENU=Due Date Calculation;
                                                              ESM=C lculo de fecha de vencimiento;
                                                              FRC=Calcul date d'‚ch‚ance;
                                                              ENC=Due Date Calculation] }
    { 3   ;   ;Discount Date Calculation;DateFormula;
                                                   CaptionML=[ENU=Discount Date Calculation;
                                                              ESM=Fecha c lculo dto. P.P.;
                                                              FRC=Calcul date d'escompte;
                                                              ENC=Discount Date Calculation] }
    { 4   ;   ;Discount %          ;Decimal       ;CaptionML=[ENU=Discount %;
                                                              ESM=% Descuento;
                                                              FRC="% escompte ";
                                                              ENC=Discount %];
                                                   DecimalPlaces=0:5;
                                                   MinValue=0;
                                                   MaxValue=100 }
    { 5   ;   ;Description         ;Text100       ;CaptionML=[ENU=Description;
                                                              ESM=Descripci¢n;
                                                              FRC=Description;
                                                              ENC=Description] }
    { 6   ;   ;Calc. Pmt. Disc. on Cr. Memos;Boolean;
                                                   CaptionML=[ENU=Calc. Pmt. Disc. on Cr. Memos;
                                                              ESM=Calc. dto. P.P. en cr‚ditos;
                                                              FRC=Calc. escompte sur notes cr‚d.;
                                                              ENC=Calc. Pmt. Disc. on Cr. Memos] }
    { 8   ;   ;Last Modified Date Time;DateTime   ;CaptionML=[ENU=Last Modified Date Time;
                                                              ESM=Fecha y hora de £ltima modificaci¢n;
                                                              FRC=Date-heure derniŠre modification;
                                                              ENC=Last Modified Date Time];
                                                   Editable=No }
    { 8000;   ;Id                  ;GUID          ;CaptionML=[ENU=Id;
                                                              ESM=Id.;
                                                              FRC="Code ";
                                                              ENC=Id] }
    { 27000;  ;SAT Payment Term    ;Code10        ;TableRelation="SAT Payment Term";
                                                   CaptionML=[ENU=SAT Payment Term;
                                                              ESM=Condici¢n de pago de SAT;
                                                              FRC=Modalit‚s de paiement SAT;
                                                              ENC=SAT Payment Term] }
  }
  KEYS
  {
    {    ;Code                                    ;Clustered=Yes }
  }
  FIELDGROUPS
  {
    { 1   ;DropDown            ;Code,Description,Due Date Calculation    }
    { 2   ;Brick               ;Code,Description,Due Date Calculation    }
  }
  CODE
  {
    VAR
      IdentityManagement@1000 : Codeunit 9801;
      CannotRemoveDefaultPaymentTermsErr@1001 : TextConst 'ENU=You cannot remove the default payment terms.;ESM=No puede quitar los t‚rminos de pago predeterminados.;FRC=Vous ne pouvez pas supprimer les modalit‚s de paiement par d‚faut.;ENC=You cannot remove the default payment terms.';

    LOCAL PROCEDURE SetLastModifiedDateTime@16();
    BEGIN
      "Last Modified Date Time" := CURRENTDATETIME;
    END;

    [External]
    PROCEDURE TranslateDescription@1(VAR PaymentTerms@1000 : Record 3;Language@1001 : Code[10]);
    VAR
      PaymentTermsTranslation@1002 : Record 462;
    BEGIN
      IF PaymentTermsTranslation.GET(PaymentTerms.Code,Language) THEN
        PaymentTerms.Description := PaymentTermsTranslation.Description;
    END;

    [External]
    PROCEDURE GetDescriptionInCurrentLanguage@2() : Text[50];
    VAR
      Language@1000 : Record 8;
      PaymentTermTranslation@1001 : Record 462;
    BEGIN
      IF PaymentTermTranslation.GET(Code,Language.GetUserLanguage) THEN
        EXIT(PaymentTermTranslation.Description);

      EXIT(Description);
    END;

    [External]
    PROCEDURE UsePaymentDiscount@3() : Boolean;
    VAR
      PaymentTerms@1000 : Record 3;
    BEGIN
      PaymentTerms.SETFILTER("Discount %",'<>%1',0);

      EXIT(NOT PaymentTerms.ISEMPTY);
    END;

    BEGIN
    END.
  }
}

OBJECT Table 4 Currency
{
  OBJECT-PROPERTIES
  {
    Date=05/22/19;
    Time=12:00:00 PM;
    Version List=NAVW114.01,NAVNA14.01;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               "Last Modified Date Time" := CURRENTDATETIME;
             END;

    OnModify=BEGIN
               "Last Date Modified" := TODAY;
               "Last Modified Date Time" := CURRENTDATETIME;
             END;

    OnDelete=VAR
               CustLedgEntry@1000 : Record 21;
               VendLedgEntry@1001 : Record 25;
             BEGIN
               CustLedgEntry.SETRANGE(Open,TRUE);
               CustLedgEntry.SETRANGE("Currency Code",Code);
               IF NOT CustLedgEntry.ISEMPTY THEN
                 ERROR(Text002,CustLedgEntry.TABLECAPTION,TABLECAPTION,Code);

               VendLedgEntry.SETRANGE(Open,TRUE);
               VendLedgEntry.SETRANGE("Currency Code",Code);
               IF NOT VendLedgEntry.ISEMPTY THEN
                 ERROR(Text002,VendLedgEntry.TABLECAPTION,TABLECAPTION,Code);

               CurrExchRate.SETRANGE("Currency Code",Code);
               CurrExchRate.DELETEALL;
             END;

    OnRename=BEGIN
               "Last Date Modified" := TODAY;
               "Last Modified Date Time" := CURRENTDATETIME;
             END;

    CaptionML=[ENU=Currency;
               ESM=Divisa;
               FRC=Devise;
               ENC=Currency];
    LookupPageID=Page5;
  }
  FIELDS
  {
    { 1   ;   ;Code                ;Code10        ;OnValidate=VAR
                                                                UpdateCurrencyExchangeRates@1001 : Codeunit 1281;
                                                              BEGIN
                                                                IF Symbol = '' THEN
                                                                  Symbol := ResolveCurrencySymbol(Code);

                                                                IF (Code <> '') AND (xRec.Code = '') THEN
                                                                  UpdateCurrencyExchangeRates.ShowMissingExchangeRatesNotification(Code);
                                                              END;

                                                   CaptionML=[ENU=Code;
                                                              ESM=C¢digo;
                                                              FRC=Code;
                                                              ENC=Code];
                                                   NotBlank=Yes }
    { 2   ;   ;Last Date Modified  ;Date          ;CaptionML=[ENU=Last Date Modified;
                                                              ESM=Fecha £lt. modificaci¢n;
                                                              FRC=Date derniŠre modification;
                                                              ENC=Last Date Modified];
                                                   Editable=No }
    { 3   ;   ;Last Date Adjusted  ;Date          ;CaptionML=[ENU=Last Date Adjusted;
                                                              ESM=Fecha £lt. ajuste divisas;
                                                              FRC=Date dernier ajustement;
                                                              ENC=Last Date Adjusted];
                                                   Editable=No }
    { 4   ;   ;ISO Code            ;Code3         ;OnValidate=BEGIN
                                                                IF "ISO Code" = '' THEN
                                                                  EXIT;
                                                                IF STRLEN("ISO Code") < MAXSTRLEN("ISO Code") THEN
                                                                  ERROR(ISOCodeLengthErr,STRLEN("ISO Code"),MAXSTRLEN("ISO Code"),"ISO Code");
                                                                IF NOT TypeHelper.IsAsciiLetter("ISO Code") THEN
                                                                  FIELDERROR("ISO Code",ASCIILetterErr);
                                                              END;

                                                   DataClassification=CustomerContent;
                                                   CaptionML=[ENU=ISO Code;
                                                              ESM=C¢digo ISO;
                                                              FRC=Code ISO;
                                                              ENC=ISO Code] }
    { 5   ;   ;ISO Numeric Code    ;Code3         ;OnValidate=BEGIN
                                                                IF "ISO Numeric Code" = '' THEN
                                                                  EXIT;
                                                                IF STRLEN("ISO Numeric Code") < MAXSTRLEN("ISO Numeric Code") THEN
                                                                  ERROR(ISOCodeLengthErr,STRLEN("ISO Numeric Code"),MAXSTRLEN("ISO Numeric Code"),"ISO Numeric Code");
                                                                IF NOT TypeHelper.IsNumeric("ISO Numeric Code") THEN
                                                                  FIELDERROR("ISO Numeric Code",NumericErr);
                                                              END;

                                                   DataClassification=CustomerContent;
                                                   CaptionML=[ENU=ISO Numeric Code;
                                                              ESM=C¢digo num‚rico ISO;
                                                              FRC=Code num‚rique ISO;
                                                              ENC=ISO Numeric Code] }
    { 6   ;   ;Unrealized Gains Acc.;Code20       ;TableRelation="G/L Account";
                                                   OnValidate=BEGIN
                                                                CheckGLAcc("Unrealized Gains Acc.");
                                                              END;

                                                   CaptionML=[ENU=Unrealized Gains Acc.;
                                                              ESM=Cta. dif. pos. no realizadas;
                                                              FRC=Compte gains non r‚alis‚s;
                                                              ENC=Unrealized Gains Acc.] }
    { 7   ;   ;Realized Gains Acc. ;Code20        ;TableRelation="G/L Account";
                                                   OnValidate=BEGIN
                                                                CheckGLAcc("Realized Gains Acc.");
                                                              END;

                                                   CaptionML=[ENU=Realized Gains Acc.;
                                                              ESM=Cta. dif. pos. realizadas;
                                                              FRC=Compte gains r‚alis‚s;
                                                              ENC=Realized Gains Acc.] }
    { 8   ;   ;Unrealized Losses Acc.;Code20      ;TableRelation="G/L Account";
                                                   OnValidate=BEGIN
                                                                CheckGLAcc("Unrealized Losses Acc.");
                                                              END;

                                                   CaptionML=[ENU=Unrealized Losses Acc.;
                                                              ESM=Cta. dif. neg. no realizadas;
                                                              FRC=Compte pertes non r‚alis‚es;
                                                              ENC=Unrealized Losses Acc.] }
    { 9   ;   ;Realized Losses Acc.;Code20        ;TableRelation="G/L Account";
                                                   OnValidate=BEGIN
                                                                CheckGLAcc("Realized Losses Acc.");
                                                              END;

                                                   CaptionML=[ENU=Realized Losses Acc.;
                                                              ESM=Cta. dif. neg. realizadas;
                                                              FRC=Compte pertes r‚alis‚es;
                                                              ENC=Realized Losses Acc.] }
    { 10  ;   ;Invoice Rounding Precision;Decimal ;InitValue=0.01;
                                                   OnValidate=BEGIN
                                                                IF "Amount Rounding Precision" <> 0 THEN
                                                                  IF "Invoice Rounding Precision" <> ROUND("Invoice Rounding Precision","Amount Rounding Precision") THEN
                                                                    FIELDERROR(
                                                                      "Invoice Rounding Precision",
                                                                      STRSUBSTNO(Text000,"Amount Rounding Precision"));
                                                              END;

                                                   CaptionML=[ENU=Invoice Rounding Precision;
                                                              ESM=Precisi¢n redondeo factura;
                                                              FRC=Pr‚c. arrondis. facture;
                                                              ENC=Invoice Rounding Precision];
                                                   AutoFormatType=1;
                                                   AutoFormatExpr=Code }
    { 12  ;   ;Invoice Rounding Type;Option       ;CaptionML=[ENU=Invoice Rounding Type;
                                                              ESM=Tipo redondeo factura;
                                                              FRC=Type arrondis. facture;
                                                              ENC=Invoice Rounding Type];
                                                   OptionCaptionML=[ENU=Nearest,Up,Down;
                                                                    ESM=M s cercano,Superior,Inferior;
                                                                    FRC=Plus prŠs,Haut,Bas;
                                                                    ENC=Nearest,Up,Down];
                                                   OptionString=Nearest,Up,Down }
    { 13  ;   ;Amount Rounding Precision;Decimal  ;InitValue=0.01;
                                                   OnValidate=BEGIN
                                                                IF "Amount Rounding Precision" <> 0 THEN BEGIN
                                                                  "Invoice Rounding Precision" := ROUND("Invoice Rounding Precision","Amount Rounding Precision");
                                                                  IF "Amount Rounding Precision" > "Invoice Rounding Precision" THEN
                                                                    "Invoice Rounding Precision" := "Amount Rounding Precision";
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Amount Rounding Precision;
                                                              ESM=Prec. redondeo importe;
                                                              FRC=Pr‚cision arrondis. montant;
                                                              ENC=Amount Rounding Precision];
                                                   DecimalPlaces=2:5;
                                                   MinValue=0 }
    { 14  ;   ;Unit-Amount Rounding Precision;Decimal;
                                                   InitValue=0.00001;
                                                   CaptionML=[ENU=Unit-Amount Rounding Precision;
                                                              ESM=Prec. redondeo precio-prod.;
                                                              FRC=Pr‚cis. arrondi. montant unit.;
                                                              ENC=Unit-Amount Rounding Precision];
                                                   DecimalPlaces=0:9;
                                                   MinValue=0 }
    { 15  ;   ;Description         ;Text30        ;CaptionML=[ENU=Description;
                                                              ESM=Descripci¢n;
                                                              FRC=Description;
                                                              ENC=Description] }
    { 17  ;   ;Amount Decimal Places;Text5        ;InitValue=2:2;
                                                   OnValidate=BEGIN
                                                                GLSetup.CheckDecimalPlacesFormat("Amount Decimal Places");
                                                              END;

                                                   CaptionML=[ENU=Amount Decimal Places;
                                                              ESM=N§ decimales para importes;
                                                              FRC=Nombre d‚cimales montant;
                                                              ENC=Amount Decimal Places];
                                                   NotBlank=Yes }
    { 18  ;   ;Unit-Amount Decimal Places;Text5   ;InitValue=2:5;
                                                   OnValidate=BEGIN
                                                                GLSetup.CheckDecimalPlacesFormat("Unit-Amount Decimal Places");
                                                              END;

                                                   CaptionML=[ENU=Unit-Amount Decimal Places;
                                                              ESM=N§ decimales para precio-prod.;
                                                              FRC=Nombre d‚cimales montant unit.;
                                                              ENC=Unit-Amount Decimal Places];
                                                   NotBlank=Yes }
    { 19  ;   ;Customer Filter     ;Code20        ;FieldClass=FlowFilter;
                                                   TableRelation=Customer;
                                                   CaptionML=[ENU=Customer Filter;
                                                              ESM=Filtro cliente;
                                                              FRC=Filtre client;
                                                              ENC=Customer Filter] }
    { 20  ;   ;Vendor Filter       ;Code20        ;FieldClass=FlowFilter;
                                                   TableRelation=Vendor;
                                                   CaptionML=[ENU=Vendor Filter;
                                                              ESM=Filtro proveedor;
                                                              FRC=Filtre fournisseur;
                                                              ENC=Vendor Filter] }
    { 21  ;   ;Global Dimension 1 Filter;Code20   ;FieldClass=FlowFilter;
                                                   TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(1));
                                                   CaptionML=[ENU=Global Dimension 1 Filter;
                                                              ESM=Filtro dimensi¢n global 1;
                                                              FRC=Filtre dimension principale 1;
                                                              ENC=Global Dimension 1 Filter];
                                                   CaptionClass='1,3,1' }
    { 22  ;   ;Global Dimension 2 Filter;Code20   ;FieldClass=FlowFilter;
                                                   TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(2));
                                                   CaptionML=[ENU=Global Dimension 2 Filter;
                                                              ESM=Filtro dimensi¢n global  2;
                                                              FRC=Filtre dimension principale 2;
                                                              ENC=Global Dimension 2 Filter];
                                                   CaptionClass='1,3,2' }
    { 23  ;   ;Date Filter         ;Date          ;FieldClass=FlowFilter;
                                                   CaptionML=[ENU=Date Filter;
                                                              ESM=Filtro fecha;
                                                              FRC=Filtre date;
                                                              ENC=Date Filter] }
    { 24  ;   ;Cust. Ledg. Entries in Filter;Boolean;
                                                   FieldClass=FlowField;
                                                   CalcFormula=Exist("Cust. Ledger Entry" WHERE (Customer No.=FIELD(Customer Filter),
                                                                                                 Currency Code=FIELD(Code)));
                                                   CaptionML=[ENU=Cust. Ledg. Entries in Filter;
                                                              ESM=Movs. cliente en filtro;
                                                              FRC=critures clients dans filtre;
                                                              ENC=Cust. Ledg. Entries in Filter];
                                                   Editable=No }
    { 25  ;   ;Customer Balance    ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Detailed Cust. Ledg. Entry".Amount WHERE (Customer No.=FIELD(Customer Filter),
                                                                                                              Initial Entry Global Dim. 1=FIELD(Global Dimension 1 Filter),
                                                                                                              Initial Entry Global Dim. 2=FIELD(Global Dimension 2 Filter),
                                                                                                              Posting Date=FIELD(Date Filter),
                                                                                                              Currency Code=FIELD(Code)));
                                                   CaptionML=[ENU=Customer Balance;
                                                              ESM=Saldo cliente;
                                                              FRC=Solde client;
                                                              ENC=Customer Balance];
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr=Code }
    { 26  ;   ;Customer Outstanding Orders;Decimal;FieldClass=FlowField;
                                                   CalcFormula=Sum("Sales Line"."Outstanding Amount" WHERE (Document Type=CONST(Order),
                                                                                                            Bill-to Customer No.=FIELD(Customer Filter),
                                                                                                            Currency Code=FIELD(Code),
                                                                                                            Shortcut Dimension 1 Code=FIELD(Global Dimension 1 Filter),
                                                                                                            Shortcut Dimension 2 Code=FIELD(Global Dimension 2 Filter)));
                                                   AccessByPermission=TableData 110=R;
                                                   CaptionML=[ENU=Customer Outstanding Orders;
                                                              ESM=Pedidos pendientes cliente;
                                                              FRC=Commandes ouvertes client;
                                                              ENC=Customer Outstanding Orders];
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr=Code }
    { 27  ;   ;Customer Shipped Not Invoiced;Decimal;
                                                   FieldClass=FlowField;
                                                   CalcFormula=Sum("Sales Line"."Shipped Not Invoiced" WHERE (Document Type=CONST(Order),
                                                                                                              Bill-to Customer No.=FIELD(Customer Filter),
                                                                                                              Currency Code=FIELD(Code),
                                                                                                              Shortcut Dimension 1 Code=FIELD(Global Dimension 1 Filter),
                                                                                                              Shortcut Dimension 2 Code=FIELD(Global Dimension 2 Filter)));
                                                   AccessByPermission=TableData 110=R;
                                                   CaptionML=[ENU=Customer Shipped Not Invoiced;
                                                              ESM=Enviado a cliente no factur.;
                                                              FRC=Livr‚ non factur‚ client;
                                                              ENC=Customer Shipped Not Invoiced];
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr=Code }
    { 28  ;   ;Customer Balance Due;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Detailed Cust. Ledg. Entry".Amount WHERE (Customer No.=FIELD(Customer Filter),
                                                                                                              Initial Entry Global Dim. 1=FIELD(Global Dimension 1 Filter),
                                                                                                              Initial Entry Global Dim. 2=FIELD(Global Dimension 2 Filter),
                                                                                                              Initial Entry Due Date=FIELD(Date Filter),
                                                                                                              Posting Date=FIELD(UPPERLIMIT(Date Filter)),
                                                                                                              Currency Code=FIELD(Code)));
                                                   CaptionML=[ENU=Customer Balance Due;
                                                              ESM=Saldo vencido cliente;
                                                              FRC=Solde d– client;
                                                              ENC=Customer Balance Due];
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr=Code }
    { 29  ;   ;Vendor Ledg. Entries in Filter;Boolean;
                                                   FieldClass=FlowField;
                                                   CalcFormula=Exist("Vendor Ledger Entry" WHERE (Vendor No.=FIELD(Vendor Filter),
                                                                                                  Currency Code=FIELD(Code)));
                                                   CaptionML=[ENU=Vendor Ledg. Entries in Filter;
                                                              ESM=Movs. proveedor en filtro;
                                                              FRC=critures fourn. dans filtre;
                                                              ENC=Vendor Ledg. Entries in Filter];
                                                   Editable=No }
    { 30  ;   ;Vendor Balance      ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=-Sum("Detailed Vendor Ledg. Entry".Amount WHERE (Vendor No.=FIELD(Vendor Filter),
                                                                                                                Initial Entry Global Dim. 1=FIELD(Global Dimension 1 Filter),
                                                                                                                Initial Entry Global Dim. 2=FIELD(Global Dimension 2 Filter),
                                                                                                                Posting Date=FIELD(Date Filter),
                                                                                                                Currency Code=FIELD(Code)));
                                                   CaptionML=[ENU=Vendor Balance;
                                                              ESM=Saldo proveedor;
                                                              FRC=Solde fournisseur;
                                                              ENC=Vendor Balance];
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr=Code }
    { 31  ;   ;Vendor Outstanding Orders;Decimal  ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Purchase Line"."Outstanding Amount" WHERE (Document Type=CONST(Order),
                                                                                                               Pay-to Vendor No.=FIELD(Vendor Filter),
                                                                                                               Currency Code=FIELD(Code),
                                                                                                               Shortcut Dimension 1 Code=FIELD(Global Dimension 1 Filter),
                                                                                                               Shortcut Dimension 2 Code=FIELD(Global Dimension 2 Filter)));
                                                   AccessByPermission=TableData 120=R;
                                                   CaptionML=[ENU=Vendor Outstanding Orders;
                                                              ESM=Pedidos pendientes proveedor;
                                                              FRC=Commandes ouvertes fournisseur;
                                                              ENC=Vendor Outstanding Orders];
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr=Code }
    { 32  ;   ;Vendor Amt. Rcd. Not Invoiced;Decimal;
                                                   FieldClass=FlowField;
                                                   CalcFormula=Sum("Purchase Line"."Amt. Rcd. Not Invoiced" WHERE (Document Type=CONST(Order),
                                                                                                                   Pay-to Vendor No.=FIELD(Vendor Filter),
                                                                                                                   Currency Code=FIELD(Code),
                                                                                                                   Shortcut Dimension 1 Code=FIELD(Global Dimension 1 Filter),
                                                                                                                   Shortcut Dimension 2 Code=FIELD(Global Dimension 2 Filter)));
                                                   AccessByPermission=TableData 120=R;
                                                   CaptionML=[ENU=Vendor Amt. Rcd. Not Invoiced;
                                                              ESM=Recibido de prov. no facturado;
                                                              FRC=Montant re‡u non fact. fourn.;
                                                              ENC=Vendor Amt. Rcd. Not Invoiced];
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr=Code }
    { 33  ;   ;Vendor Balance Due  ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=-Sum("Detailed Vendor Ledg. Entry".Amount WHERE (Vendor No.=FIELD(Vendor Filter),
                                                                                                                Initial Entry Global Dim. 1=FIELD(Global Dimension 1 Filter),
                                                                                                                Initial Entry Global Dim. 2=FIELD(Global Dimension 2 Filter),
                                                                                                                Initial Entry Due Date=FIELD(Date Filter),
                                                                                                                Posting Date=FIELD(UPPERLIMIT(Date Filter)),
                                                                                                                Currency Code=FIELD(Code)));
                                                   CaptionML=[ENU=Vendor Balance Due;
                                                              ESM=Saldo vencido proveedor;
                                                              FRC=Solde d– fournisseur;
                                                              ENC=Vendor Balance Due];
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr=Code }
    { 34  ;   ;Customer Balance (LCY);Decimal     ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Detailed Cust. Ledg. Entry"."Amount (LCY)" WHERE (Customer No.=FIELD(Customer Filter),
                                                                                                                      Initial Entry Global Dim. 1=FIELD(Global Dimension 1 Filter),
                                                                                                                      Initial Entry Global Dim. 2=FIELD(Global Dimension 2 Filter),
                                                                                                                      Posting Date=FIELD(Date Filter),
                                                                                                                      Currency Code=FIELD(Code)));
                                                   CaptionML=[ENU=Customer Balance ($);
                                                              ESM=Saldo cliente ($);
                                                              FRC=Solde client ($);
                                                              ENC=Customer Balance ($)];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 35  ;   ;Vendor Balance (LCY);Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=-Sum("Detailed Vendor Ledg. Entry"."Amount (LCY)" WHERE (Vendor No.=FIELD(Vendor Filter),
                                                                                                                        Initial Entry Global Dim. 1=FIELD(Global Dimension 1 Filter),
                                                                                                                        Initial Entry Global Dim. 2=FIELD(Global Dimension 2 Filter),
                                                                                                                        Posting Date=FIELD(Date Filter),
                                                                                                                        Currency Code=FIELD(Code)));
                                                   CaptionML=[ENU=Vendor Balance ($);
                                                              ESM=Saldo proveedor ($);
                                                              FRC=Solde fournisseur ($);
                                                              ENC=Vendor Balance ($)];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 40  ;   ;Realized G/L Gains Account;Code20  ;TableRelation="G/L Account";
                                                   OnValidate=BEGIN
                                                                CheckGLAcc("Realized G/L Gains Account");
                                                              END;

                                                   CaptionML=[ENU=Realized G/L Gains Account;
                                                              ESM=Cta. aj. pos. C/G realizados;
                                                              FRC=Compte GL gains r‚alis‚s;
                                                              ENC=Realized G/L Gains Account] }
    { 41  ;   ;Realized G/L Losses Account;Code20 ;TableRelation="G/L Account";
                                                   OnValidate=BEGIN
                                                                CheckGLAcc("Realized G/L Losses Account");
                                                              END;

                                                   CaptionML=[ENU=Realized G/L Losses Account;
                                                              ESM=Cta. aj. neg. C/G realizados;
                                                              FRC=Compte GL pertes r‚alis‚es;
                                                              ENC=Realized G/L Losses Account] }
    { 44  ;   ;Appln. Rounding Precision;Decimal  ;CaptionML=[ENU=Appln. Rounding Precision;
                                                              ESM=Precisi¢n redondeo liquidaci¢n;
                                                              FRC=Arrondissement effectu‚;
                                                              ENC=Appln. Rounding Precision];
                                                   MinValue=0;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr=Code }
    { 45  ;   ;EMU Currency        ;Boolean       ;CaptionML=[ENU=EMU Currency;
                                                              ESM=Divisa UME;
                                                              FRC=Devise U.M.E.;
                                                              ENC=EMU Currency] }
    { 46  ;   ;Currency Factor     ;Decimal       ;CaptionML=[ENU=Currency Factor;
                                                              ESM=Factor divisa;
                                                              FRC=Facteur devise;
                                                              ENC=Currency Factor];
                                                   DecimalPlaces=0:5;
                                                   Editable=No }
    { 47  ;   ;Residual Gains Account;Code20      ;TableRelation="G/L Account";
                                                   CaptionML=[ENU=Residual Gains Account;
                                                              ESM=Cta. aj. residual pos.;
                                                              FRC=Compte de gains r‚siduels;
                                                              ENC=Residual Gains Account] }
    { 48  ;   ;Residual Losses Account;Code20     ;TableRelation="G/L Account";
                                                   CaptionML=[ENU=Residual Losses Account;
                                                              ESM=Cta. aj. residual neg.;
                                                              FRC=Compte de pertes r‚siduelles;
                                                              ENC=Residual Losses Account] }
    { 50  ;   ;Conv. LCY Rndg. Debit Acc.;Code20  ;TableRelation="G/L Account";
                                                   CaptionML=[ENU=Conv. $ Rndg. Debit Acc.;
                                                              ESM=Cta. residual neg. conv. en $;
                                                              FRC=Compte d‚bit arrondi $;
                                                              ENC=Conv. $ Rndg. Debit Acc.] }
    { 51  ;   ;Conv. LCY Rndg. Credit Acc.;Code20 ;TableRelation="G/L Account";
                                                   CaptionML=[ENU=Conv. $ Rndg. Credit Acc.;
                                                              ESM=Cta. residual pos. conv. en $;
                                                              FRC=Compte cr‚dit arrondi $;
                                                              ENC=Conv. $ Rndg. Credit Acc.] }
    { 52  ;   ;Max. VAT Difference Allowed;Decimal;OnValidate=BEGIN
                                                                IF "Max. VAT Difference Allowed" <> ROUND("Max. VAT Difference Allowed","Amount Rounding Precision") THEN
                                                                  ERROR(
                                                                    Text001,
                                                                    FIELDCAPTION("Max. VAT Difference Allowed"),"Amount Rounding Precision");

                                                                "Max. VAT Difference Allowed" := ABS("Max. VAT Difference Allowed");
                                                              END;

                                                   CaptionML=[ENU=Max. Tax Difference Allowed;
                                                              ESM=M x. diferencia IVA permitida;
                                                              FRC=Diff‚rence TVA max. autoris‚e;
                                                              ENC=Max. Tax Difference Allowed];
                                                   AutoFormatType=1;
                                                   AutoFormatExpr=Code }
    { 53  ;   ;VAT Rounding Type   ;Option        ;CaptionML=[ENU=Tax Rounding Type;
                                                              ESM=Tipo redondeo IVA;
                                                              FRC=Type d'arrondissement TVA;
                                                              ENC=Tax Rounding Type];
                                                   OptionCaptionML=[ENU=Nearest,Up,Down;
                                                                    ESM=M s cercano,Superior,Inferior;
                                                                    FRC=Plus prŠs,Haut,Bas;
                                                                    ENC=Nearest,Up,Down];
                                                   OptionString=Nearest,Up,Down }
    { 54  ;   ;Payment Tolerance % ;Decimal       ;CaptionML=[ENU=Payment Tolerance %;
                                                              ESM=% Tolerancia pago;
                                                              FRC=% tol‚rance de rŠglement;
                                                              ENC=Payment Tolerance %];
                                                   DecimalPlaces=0:5;
                                                   MinValue=0;
                                                   MaxValue=100;
                                                   Editable=No }
    { 55  ;   ;Max. Payment Tolerance Amount;Decimal;
                                                   CaptionML=[ENU=Max. Payment Tolerance Amount;
                                                              ESM=M x. importe tolerancia pago;
                                                              FRC=Montant tol‚rance rŠglement max.;
                                                              ENC=Max. Payment Tolerance Amount];
                                                   MinValue=0;
                                                   Editable=No;
                                                   AutoFormatType=1;
                                                   AutoFormatExpr=Code }
    { 56  ;   ;Symbol              ;Text10        ;CaptionML=[ENU=Symbol;
                                                              ESM=S¡mbolo;
                                                              FRC=Symbole;
                                                              ENC=Symbol] }
    { 57  ;   ;Last Modified Date Time;DateTime   ;CaptionML=[ENU=Last Modified Date Time;
                                                              ESM=Fecha y hora de £ltima modificaci¢n;
                                                              FRC=Date-heure derniŠre modification;
                                                              ENC=Last Modified Date Time];
                                                   Editable=No }
    { 8000;   ;Id                  ;GUID          ;CaptionML=[ENU=Id;
                                                              ESM=Id.;
                                                              FRC="Code ";
                                                              ENC=Id] }
  }
  KEYS
  {
    {    ;Code                                    ;Clustered=Yes }
  }
  FIELDGROUPS
  {
    { 1   ;Brick               ;Code,Description                         }
  }
  CODE
  {
    VAR
      Text000@1000 : TextConst 'ENU=must be rounded to the nearest %1;ESM=se debe redondear al %1 m s cercano;FRC=doit ˆtre arrondi au %1 le plus prŠs;ENC=must be rounded to the nearest %1';
      Text001@1001 : TextConst 'ENU=%1 must be rounded to the nearest %2.;ESM=Se debe redondear %1 al m s cercano %2.;FRC=%1 doit ˆtre arrondi au plus prŠs de %2.;ENC=%1 must be rounded to the nearest %2.';
      CurrExchRate@1002 : Record 330;
      GLSetup@1003 : Record 98;
      Text002@1004 : TextConst '@@@=1 either customer or vendor ledger entry table 2 name co currency table 3 currencency code;ENU=There is one or more opened entries in the %1 table using %2 %3.;ESM=Hay una o m s entradas abiertas en la tabla %1 que usan %2 %3.;FRC=Il existe une ou plusieurs ‚critures ouvertes dans la table %1 utilisant %2 %3.;ENC=There is one or more opened entries in the %1 table using %2 %3.';
      IncorrectEntryTypeErr@1005 : TextConst 'ENU=Incorrect Entry Type %1.;ESM=Tipo de movimiento %1 incorrecto.;FRC=Type d''‚criture incorrect %1.;ENC=Incorrect Entry Type %1.';
      EuroDescriptionTxt@1006 : TextConst '@@@=Currency Description;ENU=Euro;ESM=Euro;FRC=Euro;ENC=Euro';
      CanadiandollarDescriptionTxt@1007 : TextConst '@@@=Currency Description;ENU=Canadian dollar;ESM=Peso canadiense;FRC=Dollar canadien;ENC=Canadian dollar';
      BritishpoundDescriptionTxt@1008 : TextConst '@@@=Currency Description;ENU=Pound Sterling;ESM=Libra esterlina;FRC=Livre Sterling;ENC=Pound Sterling';
      USdollarDescriptionTxt@1009 : TextConst '@@@=Currency Description;ENU=US dollar;ESM=Peso de EE.ÿUU.;FRC=Dollar am‚ricain;ENC=US dollar';
      ISOCodeLengthErr@1010 : TextConst '@@@=%1, %2 - numbers, %3 - actual value;ENU=The length of the string is %1, but it must be equal to %2 characters. Value: %3.;ESM=La longitud de la cadena es %1, pero debe ser igual a %2 caracteres. Valor: %3.;FRC=La longueur de la chaŒne est %1, mais elle doit ˆtre inf‚rieure ou ‚gale … %2ÿcaractŠres. Valeurÿ: %3.;ENC=The length of the string is %1, but it must be equal to %2 characters. Value: %3.';
      ASCIILetterErr@1011 : TextConst 'ENU=must contain ASCII letters only;ESM=solo debe contener letras ASCII;FRC=doit contenir uniquement des lettres ASCII;ENC=must contain ASCII letters only';
      NumericErr@1012 : TextConst 'ENU=must contain numbers only;ESM=solo debe contener n£meros;FRC=doit contenir uniquement des chiffres;ENC=must contain numbers only';
      TypeHelper@1013 : Codeunit 10;

    [External]
    PROCEDURE InitRoundingPrecision@2();
    BEGIN
      GLSetup.GET;
      IF GLSetup."Amount Rounding Precision" <> 0 THEN
        "Amount Rounding Precision" := GLSetup."Amount Rounding Precision"
      ELSE
        "Amount Rounding Precision" := 0.01;
      IF GLSetup."Unit-Amount Rounding Precision" <> 0 THEN
        "Unit-Amount Rounding Precision" := GLSetup."Unit-Amount Rounding Precision"
      ELSE
        "Unit-Amount Rounding Precision" := 0.00001;
      "Max. VAT Difference Allowed" := GLSetup."Max. VAT Difference Allowed";
      "VAT Rounding Type" := GLSetup."VAT Rounding Type";
      "Invoice Rounding Precision" := GLSetup."Inv. Rounding Precision (LCY)";
      "Invoice Rounding Type" := GLSetup."Inv. Rounding Type (LCY)";
      Symbol := '$';

      OnAfterInitRoundingPrecision(Rec,xRec,GLSetup);
    END;

    LOCAL PROCEDURE CheckGLAcc@1(AccNo@1000 : Code[20]);
    VAR
      GLAcc@1001 : Record 15;
    BEGIN
      IF AccNo <> '' THEN BEGIN
        GLAcc.GET(AccNo);
        GLAcc.CheckGLAcc;
      END;
    END;

    [External]
    PROCEDURE VATRoundingDirection@3() : Text[1];
    BEGIN
      CASE "VAT Rounding Type" OF
        "VAT Rounding Type"::Nearest:
          EXIT('=');
        "VAT Rounding Type"::Up:
          EXIT('>');
        "VAT Rounding Type"::Down:
          EXIT('<');
      END;
    END;

    [External]
    PROCEDURE InvoiceRoundingDirection@4() : Text[1];
    BEGIN
      CASE "Invoice Rounding Type" OF
        "Invoice Rounding Type"::Nearest:
          EXIT('=');
        "Invoice Rounding Type"::Up:
          EXIT('>');
        "Invoice Rounding Type"::Down:
          EXIT('<');
      END;
    END;

    [External]
    PROCEDURE CheckAmountRoundingPrecision@5();
    BEGIN
      TESTFIELD("Unit-Amount Rounding Precision");
      TESTFIELD("Amount Rounding Precision");
    END;

    [External]
    PROCEDURE GetGainLossAccount@6(DtldCVLedgEntryBuf@1000 : Record 383) : Code[20];
    BEGIN
      OnBeforeGetGainLossAccount(Rec,DtldCVLedgEntryBuf);

      CASE DtldCVLedgEntryBuf."Entry Type" OF
        DtldCVLedgEntryBuf."Entry Type"::"Unrealized Loss":
          EXIT(GetUnrealizedLossesAccount);
        DtldCVLedgEntryBuf."Entry Type"::"Unrealized Gain":
          EXIT(GetUnrealizedGainsAccount);
        DtldCVLedgEntryBuf."Entry Type"::"Realized Loss":
          EXIT(GetRealizedLossesAccount);
        DtldCVLedgEntryBuf."Entry Type"::"Realized Gain":
          EXIT(GetRealizedGainsAccount);
        ELSE
          ERROR(IncorrectEntryTypeErr,DtldCVLedgEntryBuf."Entry Type");
      END;
    END;

    [External]
    PROCEDURE GetRealizedGainsAccount@12() : Code[20];
    BEGIN
      TESTFIELD("Realized Gains Acc.");
      EXIT("Realized Gains Acc.");
    END;

    [External]
    PROCEDURE GetRealizedLossesAccount@14() : Code[20];
    BEGIN
      TESTFIELD("Realized Losses Acc.");
      EXIT("Realized Losses Acc.");
    END;

    [External]
    PROCEDURE GetRealizedGLGainsAccount@18() : Code[20];
    BEGIN
      TESTFIELD("Realized G/L Gains Account");
      EXIT("Realized G/L Gains Account");
    END;

    [External]
    PROCEDURE GetRealizedGLLossesAccount@19() : Code[20];
    BEGIN
      TESTFIELD("Realized G/L Losses Account");
      EXIT("Realized G/L Losses Account");
    END;

    [External]
    PROCEDURE GetResidualGainsAccount@20() : Code[20];
    BEGIN
      TESTFIELD("Residual Gains Account");
      EXIT("Residual Gains Account");
    END;

    [External]
    PROCEDURE GetResidualLossesAccount@21() : Code[20];
    BEGIN
      TESTFIELD("Residual Losses Account");
      EXIT("Residual Losses Account");
    END;

    [External]
    PROCEDURE GetUnrealizedGainsAccount@16() : Code[20];
    BEGIN
      TESTFIELD("Unrealized Gains Acc.");
      EXIT("Unrealized Gains Acc.");
    END;

    [External]
    PROCEDURE GetUnrealizedLossesAccount@15() : Code[20];
    BEGIN
      TESTFIELD("Unrealized Losses Acc.");
      EXIT("Unrealized Losses Acc.");
    END;

    [External]
    PROCEDURE GetConvLCYRoundingDebitAccount@22() : Code[20];
    BEGIN
      TESTFIELD("Conv. LCY Rndg. Debit Acc.");
      EXIT("Conv. LCY Rndg. Debit Acc.");
    END;

    [External]
    PROCEDURE GetConvLCYRoundingCreditAccount@23() : Code[20];
    BEGIN
      TESTFIELD("Conv. LCY Rndg. Credit Acc.");
      EXIT("Conv. LCY Rndg. Credit Acc.");
    END;

    [External]
    PROCEDURE GetCurrencySymbol@8() : Text[10];
    BEGIN
      IF Symbol <> '' THEN
        EXIT(Symbol);

      EXIT(Code);
    END;

    [External]
    PROCEDURE ResolveCurrencySymbol@9(CurrencyCode@1000 : Code[10]) : Text[10];
    VAR
      Currency@1001 : Record 4;
      PoundChar@1002 : Char;
      EuroChar@1003 : Char;
      YenChar@1004 : Char;
    BEGIN
      IF Currency.GET(CurrencyCode) THEN
        IF Currency.Symbol <> '' THEN
          EXIT(Currency.Symbol);

      PoundChar := 163;
      YenChar := 165;
      EuroChar := 8364;

      CASE CurrencyCode OF
        'AUD','BND','CAD','FJD','HKD','MXN','NZD','SBD','SGD','USD':
          EXIT('$');
        'GBP':
          EXIT(FORMAT(PoundChar));
        'DKK','ISK','NOK','SEK':
          EXIT('kr');
        'EUR':
          EXIT(FORMAT(EuroChar));
        'CNY','JPY':
          EXIT(FORMAT(YenChar));
      END;

      EXIT('');
    END;

    [External]
    PROCEDURE ResolveCurrencyDescription@10(CurrencyCode@1000 : Code[10]) : Text;
    VAR
      Currency@1001 : Record 4;
    BEGIN
      IF Currency.GET(CurrencyCode) THEN
        IF Currency.Description <> '' THEN
          EXIT(Currency.Description);

      CASE CurrencyCode OF
        'CAD':
          EXIT(CanadiandollarDescriptionTxt);
        'GBP':
          EXIT(BritishpoundDescriptionTxt);
        'USD':
          EXIT(USdollarDescriptionTxt);
        'EUR':
          EXIT(EuroDescriptionTxt);
      END;

      EXIT('');
    END;

    [External]
    PROCEDURE ResolveGLCurrencySymbol@11(CurrencyCode@1000 : Code[10]) : Text[10];
    VAR
      Currency@1001 : Record 4;
    BEGIN
      IF CurrencyCode <> '' THEN
        EXIT(Currency.ResolveCurrencySymbol(CurrencyCode));

      GLSetup.GET;
      EXIT(GLSetup.GetCurrencySymbol);
    END;

    [External]
    PROCEDURE Initialize@7(CurrencyCode@1000 : Code[10]);
    BEGIN
      IF CurrencyCode <> '' THEN
        GET(CurrencyCode)
      ELSE
        InitRoundingPrecision;
    END;

    [External]
    PROCEDURE SuggestSetupAccounts@26();
    VAR
      RecRef@1000 : RecordRef;
    BEGIN
      RecRef.GETTABLE(Rec);
      SuggestGainLossAccounts(RecRef);
      SuggestOtherAccounts(RecRef);
      RecRef.MODIFY;
    END;

    LOCAL PROCEDURE SuggestGainLossAccounts@30(VAR RecRef@1000 : RecordRef);
    BEGIN
      IF "Unrealized Gains Acc." = '' THEN
        SuggestAccount(RecRef,FIELDNO("Unrealized Gains Acc."));
      IF "Realized Gains Acc." = '' THEN
        SuggestAccount(RecRef,FIELDNO("Realized Gains Acc."));
      IF "Unrealized Losses Acc." = '' THEN
        SuggestAccount(RecRef,FIELDNO("Unrealized Losses Acc."));
      IF "Realized Losses Acc." = '' THEN
        SuggestAccount(RecRef,FIELDNO("Realized Losses Acc."));
    END;

    LOCAL PROCEDURE SuggestOtherAccounts@13(VAR RecRef@1000 : RecordRef);
    BEGIN
      IF "Realized G/L Gains Account" = '' THEN
        SuggestAccount(RecRef,FIELDNO("Realized G/L Gains Account"));
      IF "Realized G/L Losses Account" = '' THEN
        SuggestAccount(RecRef,FIELDNO("Realized G/L Losses Account"));
      IF "Residual Gains Account" = '' THEN
        SuggestAccount(RecRef,FIELDNO("Residual Gains Account"));
      IF "Residual Losses Account" = '' THEN
        SuggestAccount(RecRef,FIELDNO("Residual Losses Account"));
      IF "Conv. LCY Rndg. Debit Acc." = '' THEN
        SuggestAccount(RecRef,FIELDNO("Conv. LCY Rndg. Debit Acc."));
      IF "Conv. LCY Rndg. Credit Acc." = '' THEN
        SuggestAccount(RecRef,FIELDNO("Conv. LCY Rndg. Credit Acc."));
    END;

    LOCAL PROCEDURE SuggestAccount@34(VAR RecRef@1000 : RecordRef;AccountFieldNo@1001 : Integer);
    VAR
      TempAccountUseBuffer@1002 : TEMPORARY Record 63;
      RecFieldRef@1003 : FieldRef;
      CurrencyRecRef@1005 : RecordRef;
      CurrencyFieldRef@1006 : FieldRef;
    BEGIN
      CurrencyRecRef.OPEN(DATABASE::Currency);

      CurrencyRecRef.RESET;
      CurrencyFieldRef := CurrencyRecRef.FIELD(FIELDNO(Code));
      CurrencyFieldRef.SETFILTER('<>%1',Code);
      TempAccountUseBuffer.UpdateBuffer(CurrencyRecRef,AccountFieldNo);
      CurrencyRecRef.CLOSE;

      TempAccountUseBuffer.RESET;
      TempAccountUseBuffer.SETCURRENTKEY("No. of Use");
      IF TempAccountUseBuffer.FINDLAST THEN BEGIN
        RecFieldRef := RecRef.FIELD(AccountFieldNo);
        RecFieldRef.VALUE(TempAccountUseBuffer."Account No.");
      END;
    END;

    [Integration]
    LOCAL PROCEDURE OnAfterInitRoundingPrecision@24(VAR Currency@1000 : Record 4;VAR xCurrency@1001 : Record 4;VAR GeneralLedgerSetup@1002 : Record 98);
    BEGIN
    END;

    [Integration]
    LOCAL PROCEDURE OnBeforeGetGainLossAccount@17(VAR Currency@1000 : Record 4;DtldCVLedgEntryBuffer@1001 : Record 383);
    BEGIN
    END;

    BEGIN
    END.
  }
}

OBJECT Table 5 Finance Charge Terms
{
  OBJECT-PROPERTIES
  {
    Date=03/24/19;
    Time=12:00:00 PM;
    Version List=NAVW114.00;
  }
  PROPERTIES
  {
    DataCaptionFields=Code,Description;
    OnDelete=BEGIN
               FinChrgText.SETRANGE("Fin. Charge Terms Code",Code);
               FinChrgText.DELETEALL;

               CurrForFinChrgTerms.SETRANGE("Fin. Charge Terms Code",Code);
               CurrForFinChrgTerms.DELETEALL;

               FinChrgInterestRate.SETRANGE("Fin. Charge Terms Code",Code);
               FinChrgInterestRate.DELETEALL;
             END;

    CaptionML=[ENU=Finance Charge Terms;
               ESM=T‚rminos inter‚s;
               FRC=Modalit‚s frais financiers;
               ENC=Finance Charge Terms];
    LookupPageID=Page6;
  }
  FIELDS
  {
    { 1   ;   ;Code                ;Code10        ;CaptionML=[ENU=Code;
                                                              ESM=C¢digo;
                                                              FRC=Code;
                                                              ENC=Code];
                                                   NotBlank=Yes }
    { 2   ;   ;Interest Rate       ;Decimal       ;OnValidate=BEGIN
                                                                FinChrgInterestRate.RESET;
                                                                FinChrgInterestRate.SETRANGE("Fin. Charge Terms Code",Code);
                                                                IF NOT FinChrgInterestRate.ISEMPTY THEN
                                                                  MESSAGE(InterestRateNotificationMsg);
                                                              END;

                                                   CaptionML=[ENU=Interest Rate;
                                                              ESM=Tipo inter‚s;
                                                              FRC=Taux d'int‚rˆt;
                                                              ENC=Interest Rate];
                                                   DecimalPlaces=0:5;
                                                   MinValue=0;
                                                   MaxValue=100 }
    { 3   ;   ;Minimum Amount (LCY);Decimal       ;CaptionML=[ENU=Minimum Amount ($);
                                                              ESM=Importe m¡nimo ($);
                                                              FRC=Montant minimum ($);
                                                              ENC=Minimum Amount ($)];
                                                   MinValue=0;
                                                   AutoFormatType=1 }
    { 5   ;   ;Additional Fee (LCY);Decimal       ;CaptionML=[ENU=Additional Fee ($);
                                                              ESM=Recargo adicional ($);
                                                              FRC=Frais suppl. ($);
                                                              ENC=Additional Fee ($)];
                                                   MinValue=0;
                                                   AutoFormatType=1 }
    { 7   ;   ;Description         ;Text100       ;CaptionML=[ENU=Description;
                                                              ESM=Descripci¢n;
                                                              FRC=Description;
                                                              ENC=Description] }
    { 8   ;   ;Interest Calculation Method;Option ;CaptionML=[ENU=Interest Calculation Method;
                                                              ESM=M‚todo c lculo inter‚s;
                                                              FRC=Mode calcul int‚rˆts;
                                                              ENC=Interest Calculation Method];
                                                   OptionCaptionML=[ENU=Average Daily Balance,Balance Due;
                                                                    ESM=D¡as saldo vencido,Saldo vencido;
                                                                    FRC=Solde moyen quotidien,Solde d–;
                                                                    ENC=Average Daily Balance,Balance Due];
                                                   OptionString=Average Daily Balance,Balance Due }
    { 9   ;   ;Interest Period (Days);Integer     ;CaptionML=[ENU=Interest Period (Days);
                                                              ESM=Periodo inter‚s (d¡as);
                                                              FRC=P‚riode int‚rˆts (jours);
                                                              ENC=Interest Period (Days)] }
    { 10  ;   ;Grace Period        ;DateFormula   ;CaptionML=[ENU=Grace Period;
                                                              ESM=Periodo gracia;
                                                              FRC=D‚lai de grƒce;
                                                              ENC=Grace Period] }
    { 11  ;   ;Due Date Calculation;DateFormula   ;CaptionML=[ENU=Due Date Calculation;
                                                              ESM=C lculo de fecha de vencimiento;
                                                              FRC=Calcul date d'‚ch‚ance;
                                                              ENC=Due Date Calculation] }
    { 12  ;   ;Interest Calculation;Option        ;CaptionML=[ENU=Interest Calculation;
                                                              ESM=Movs. c lculo inter‚s;
                                                              FRC=Calcul int‚rˆts;
                                                              ENC=Interest Calculation];
                                                   OptionCaptionML=[ENU=Open Entries,Closed Entries,All Entries;
                                                                    ESM=Movs. pendientes,Movs. liquidados,Todos;
                                                                    FRC=critures ouvertes,critures ferm‚es,Toutes ‚critures;
                                                                    ENC=Open Entries,Closed Entries,All Entries];
                                                   OptionString=Open Entries,Closed Entries,All Entries }
    { 13  ;   ;Post Interest       ;Boolean       ;InitValue=Yes;
                                                   CaptionML=[ENU=Post Interest;
                                                              ESM=Registrar inter‚s;
                                                              FRC=Reporter int‚rˆts;
                                                              ENC=Post Interest] }
    { 14  ;   ;Post Additional Fee ;Boolean       ;InitValue=Yes;
                                                   CaptionML=[ENU=Post Additional Fee;
                                                              ESM=Registrar recargo adicional;
                                                              FRC=Reporter frais suppl‚mentaires;
                                                              ENC=Post Additional Fee] }
    { 15  ;   ;Line Description    ;Text100       ;CaptionML=[ENU=Line Description;
                                                              ESM=Descripci¢n l¡nea reg.;
                                                              FRC=Description ligne;
                                                              ENC=Line Description] }
    { 16  ;   ;Add. Line Fee in Interest;Boolean  ;CaptionML=[ENU=Add. Line Fee in Interest;
                                                              ESM=Recargo l¡nea fijo en intereses;
                                                              FRC=Frais ligne suppl‚mentaires en int‚rˆt;
                                                              ENC=Add. Line Fee in Interest] }
    { 30  ;   ;Detailed Lines Description;Text100 ;CaptionML=[ENU=Detailed Lines Description;
                                                              ESM=Descripci¢n detallada de las l¡neas;
                                                              FRC=Description des lignes d‚taill‚es;
                                                              ENC=Detailed Lines Description] }
  }
  KEYS
  {
    {    ;Code                                    ;Clustered=Yes }
  }
  FIELDGROUPS
  {
    { 1   ;DropDown            ;Code,Description,Interest Rate           }
  }
  CODE
  {
    VAR
      FinChrgText@1000 : Record 301;
      CurrForFinChrgTerms@1001 : Record 328;
      InterestRateNotificationMsg@1002 : TextConst 'ENU=This interest rate will only be used if no relevant interest rate per date has been entered.;ESM=Este tipo de inter‚s s¢lo se utilizar  si no ha introducido ning£n tipo de inter‚s correspondiente por fecha.;FRC=Ce taux d''int‚rˆt sera uniquement utilis‚ si aucun taux d''int‚rˆt pertinent n''a ‚t‚ saisi par date.;ENC=This interest rate will only be used if no relevant interest rate per date has been entered.';
      FinChrgInterestRate@1003 : Record 572;

    BEGIN
    END.
  }
}

OBJECT Table 6 Customer Price Group
{
  OBJECT-PROPERTIES
  {
    Date=03/24/19;
    Time=12:00:00 PM;
    Version List=NAVW114.00;
  }
  PROPERTIES
  {
    OnDelete=BEGIN
               UpdateSalesPrices(FALSE);
             END;

    OnRename=BEGIN
               UpdateSalesPrices(TRUE);
             END;

    CaptionML=[ENU=Customer Price Group;
               ESM=Grupo precio cliente;
               FRC=Groupe de prix du client;
               ENC=Customer Price Group];
    LookupPageID=Page7;
  }
  FIELDS
  {
    { 1   ;   ;Code                ;Code10        ;CaptionML=[ENU=Code;
                                                              ESM=C¢digo;
                                                              FRC=Code;
                                                              ENC=Code];
                                                   NotBlank=Yes }
    { 2   ;   ;Price Includes VAT  ;Boolean       ;OnValidate=VAR
                                                                SalesSetup@1000 : Record 311;
                                                              BEGIN
                                                                IF "Price Includes VAT" THEN BEGIN
                                                                  SalesSetup.GET;
                                                                  IF SalesSetup."VAT Bus. Posting Gr. (Price)" <> '' THEN
                                                                    VALIDATE("VAT Bus. Posting Gr. (Price)",SalesSetup."VAT Bus. Posting Gr. (Price)");
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Price Includes Tax;
                                                              ESM=Precio IVA incluido;
                                                              FRC=Prix avec TVA;
                                                              ENC=Price Includes VAT] }
    { 5   ;   ;Allow Invoice Disc. ;Boolean       ;InitValue=Yes;
                                                   CaptionML=[ENU=Allow Invoice Disc.;
                                                              ESM=Permitir dto. factura;
                                                              FRC=Escompte de facture permis;
                                                              ENC=Allow Invoice Disc.] }
    { 6   ;   ;VAT Bus. Posting Gr. (Price);Code20;TableRelation="VAT Business Posting Group";
                                                   CaptionML=[ENU=Tax Bus. Posting Gr. (Price);
                                                              ESM=Gr.regis. IVA negocio (precio);
                                                              FRC=Gr. reports taxes entr. (prix);
                                                              ENC=Tax Bus. Posting Gr. (Price)] }
    { 10  ;   ;Description         ;Text100       ;CaptionML=[ENU=Description;
                                                              ESM=Descripci¢n;
                                                              FRC=Description;
                                                              ENC=Description] }
    { 7001;   ;Allow Line Disc.    ;Boolean       ;InitValue=Yes;
                                                   CaptionML=[ENU=Allow Line Disc.;
                                                              ESM=Permite dto. l¡nea;
                                                              FRC=Autoriser remise ligne;
                                                              ENC=Allow Line Disc.] }
  }
  KEYS
  {
    {    ;Code                                    ;Clustered=Yes }
  }
  FIELDGROUPS
  {
    { 1   ;DropDown            ;Code,Description,Allow Invoice Disc.,Allow Line Disc. }
  }
  CODE
  {

    LOCAL PROCEDURE UpdateSalesPrices@2(CreateNewSalesPrice@1002 : Boolean);
    VAR
      SalesPrice@1001 : Record 7002;
      NewSalesPrice@1000 : Record 7002;
    BEGIN
      SalesPrice.SETRANGE("Sales Type",SalesPrice."Sales Type"::"Customer Price Group");
      SalesPrice.SETRANGE("Sales Code",xRec.Code);
      IF CreateNewSalesPrice THEN
        IF SalesPrice.FINDSET THEN
          REPEAT
            NewSalesPrice := SalesPrice;
            NewSalesPrice."Sales Code" := Code;
            NewSalesPrice.INSERT(TRUE);
          UNTIL SalesPrice.NEXT = 0;
      SalesPrice.DELETEALL(TRUE);
    END;

    BEGIN
    END.
  }
}

OBJECT Table 7 Standard Text
{
  OBJECT-PROPERTIES
  {
    Date=03/24/19;
    Time=12:00:00 PM;
    Version List=NAVW114.00;
  }
  PROPERTIES
  {
    OnDelete=BEGIN
               ExtTextHeader.SETRANGE("Table Name",ExtTextHeader."Table Name"::"Standard Text");
               ExtTextHeader.SETRANGE("No.",Code);
               ExtTextHeader.DELETEALL(TRUE);
             END;

    OnRename=VAR
               SalesLine@1000 : Record 37;
               PurchaseLine@1001 : Record 39;
             BEGIN
               SalesLine.RenameNo(SalesLine.Type::" ",xRec.Code,Code);
               PurchaseLine.RenameNo(PurchaseLine.Type::" ",xRec.Code,Code);
             END;

    CaptionML=[ENU=Standard Text;
               ESM=Concepto est ndar;
               FRC=Texte standard;
               ENC=Standard Text];
    LookupPageID=Page8;
  }
  FIELDS
  {
    { 1   ;   ;Code                ;Code20        ;CaptionML=[ENU=Code;
                                                              ESM=C¢digo;
                                                              FRC=Code;
                                                              ENC=Code];
                                                   NotBlank=Yes }
    { 2   ;   ;Description         ;Text100       ;CaptionML=[ENU=Description;
                                                              ESM=Descripci¢n;
                                                              FRC=Description;
                                                              ENC=Description] }
  }
  KEYS
  {
    {    ;Code                                    ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      ExtTextHeader@1000 : Record 279;

    BEGIN
    END.
  }
}

OBJECT Table 8 Language
{
  OBJECT-PROPERTIES
  {
    Date=03/24/19;
    Time=12:00:00 PM;
    Version List=NAVW114.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Language;
               ESM=Idioma;
               FRC=Langue;
               ENC=Language];
    LookupPageID=Page9;
  }
  FIELDS
  {
    { 1   ;   ;Code                ;Code10        ;CaptionML=[ENU=Code;
                                                              ESM=C¢digo;
                                                              FRC=Code;
                                                              ENC=Code];
                                                   NotBlank=Yes }
    { 2   ;   ;Name                ;Text50        ;CaptionML=[ENU=Name;
                                                              ESM=Nombre;
                                                              FRC=Nom;
                                                              ENC=Name] }
    { 6   ;   ;Windows Language ID ;Integer       ;TableRelation="Windows Language";
                                                   OnValidate=BEGIN
                                                                CALCFIELDS("Windows Language Name");
                                                              END;

                                                   CaptionML=[ENU=Windows Language ID;
                                                              ESM=ID Idioma Windows;
                                                              FRC=Code de langue Windows;
                                                              ENC=Windows Language ID];
                                                   BlankZero=Yes }
    { 7   ;   ;Windows Language Name;Text80       ;FieldClass=FlowField;
                                                   CalcFormula=Lookup("Windows Language".Name WHERE (Language ID=FIELD(Windows Language ID)));
                                                   CaptionML=[ENU=Windows Language Name;
                                                              ESM=Nombre idioma Windows;
                                                              FRC=Nom de langue Windows;
                                                              ENC=Windows Language Name];
                                                   Editable=No }
  }
  KEYS
  {
    {    ;Code                                    ;Clustered=Yes }
  }
  FIELDGROUPS
  {
    { 1   ;Brick               ;Name                                     }
  }
  CODE
  {

    [External]
    PROCEDURE GetUserLanguage@1() : Code[10];
    VAR
      UserLanguageId@1000 : Integer;
      Handled@1001 : Boolean;
    BEGIN
      OnGetUserLanguageId(UserLanguageId,Handled);

      IF NOT Handled THEN
        UserLanguageId := GLOBALLANGUAGE;

      EXIT(GetLanguageCode(UserLanguageId));
    END;

    [External]
    PROCEDURE GetLanguageID@2(LanguageCode@1000 : Code[10]) : Integer;
    VAR
      IsHandled@1001 : Boolean;
    BEGIN
      IsHandled := FALSE;
      OnGetLanguageID(LanguageCode,"Windows Language ID",IsHandled);
      IF IsHandled THEN BEGIN
        TESTFIELD("Windows Language ID");
        EXIT("Windows Language ID");
      END;

      CLEAR(Rec);
      IF LanguageCode <> '' THEN
        IF GET(LanguageCode) THEN
          EXIT("Windows Language ID");

      "Windows Language ID" := GLOBALLANGUAGE;
      EXIT("Windows Language ID");
    END;

    [External]
    PROCEDURE GetUserSelectedLanguageId@4() : Integer;
    VAR
      UserPersonalization@1000 : Record 2000000073;
      BlankGuid@1001 : GUID;
      LanguageId@1002 : Integer;
    BEGIN
      UserPersonalization.SETRANGE("User ID",USERID);
      IF NOT UserPersonalization.FINDFIRST THEN BEGIN
        UserPersonalization.SETRANGE("User ID",BlankGuid);
        IF NOT UserPersonalization.FINDFIRST THEN;
      END;

      LanguageId := UserPersonalization."Language ID";
      IF LanguageId = 0 THEN
        LanguageId := GLOBALLANGUAGE;

      EXIT(LanguageId);
    END;

    LOCAL PROCEDURE GetLanguageCode@7(LanguageId@1000 : Integer) : Code[10];
    BEGIN
      CLEAR(Rec);
      SETRANGE("Windows Language ID",LanguageId);
      IF FINDFIRST THEN;
      SETRANGE("Windows Language ID");
      EXIT(Code);
    END;

    [Integration]
    LOCAL PROCEDURE OnGetLanguageID@5(VAR LanguageCode@1000 : Code[10];VAR LanguageID@1001 : Integer;VAR IsHandled@1002 : Boolean);
    BEGIN
    END;

    [Integration]
    LOCAL PROCEDURE OnGetUserLanguageId@3(VAR UserLanguageId@1000 : Integer;VAR Handled@1001 : Boolean);
    BEGIN
    END;

    BEGIN
    END.
  }
}

OBJECT Table 9 Country/Region
{
  OBJECT-PROPERTIES
  {
    Date=03/24/19;
    Time=12:00:00 PM;
    Version List=NAVW114.00,NAVNA14.00;
  }
  PROPERTIES
  {
    OnInsert=BEGIN
               "Last Modified Date Time" := CURRENTDATETIME;
             END;

    OnModify=BEGIN
               "Last Modified Date Time" := CURRENTDATETIME;
             END;

    OnDelete=VAR
               VATRegNoFormat@1000 : Record 381;
             BEGIN
               VATRegNoFormat.SETFILTER("Country/Region Code",Code);
               VATRegNoFormat.DELETEALL;
             END;

    OnRename=BEGIN
               "Last Modified Date Time" := CURRENTDATETIME;
             END;

    CaptionML=[ENU=Country/Region;
               ESM=Pa¡s/regi¢n;
               FRC=Pays/r‚gion;
               ENC=Country/Region];
    LookupPageID=Page10;
  }
  FIELDS
  {
    { 1   ;   ;Code                ;Code10        ;CaptionML=[ENU=Code;
                                                              ESM=C¢digo;
                                                              FRC=Code;
                                                              ENC=Code];
                                                   NotBlank=Yes }
    { 2   ;   ;Name                ;Text50        ;CaptionML=[ENU=Name;
                                                              ESM=Nombre;
                                                              FRC=Nom;
                                                              ENC=Name] }
    { 4   ;   ;ISO Code            ;Code2         ;OnValidate=BEGIN
                                                                IF "ISO Code" = '' THEN
                                                                  EXIT;
                                                                IF STRLEN("ISO Code") < MAXSTRLEN("ISO Code") THEN
                                                                  ERROR(ISOCodeLengthErr,STRLEN("ISO Code"),MAXSTRLEN("ISO Code"),"ISO Code");
                                                                IF NOT TypeHelper.IsAsciiLetter("ISO Code") THEN
                                                                  FIELDERROR("ISO Code",ASCIILetterErr);
                                                              END;

                                                   DataClassification=CustomerContent;
                                                   CaptionML=[ENU=ISO Code;
                                                              ESM=C¢digo ISO;
                                                              FRC=Code ISO;
                                                              ENC=ISO Code] }
    { 5   ;   ;ISO Numeric Code    ;Code3         ;OnValidate=BEGIN
                                                                IF "ISO Numeric Code" = '' THEN
                                                                  EXIT;
                                                                IF STRLEN("ISO Numeric Code") < MAXSTRLEN("ISO Numeric Code") THEN
                                                                  ERROR(ISOCodeLengthErr,STRLEN("ISO Numeric Code"),MAXSTRLEN("ISO Numeric Code"),"ISO Numeric Code");
                                                                IF NOT TypeHelper.IsNumeric("ISO Numeric Code") THEN
                                                                  FIELDERROR("ISO Numeric Code",NumericErr);
                                                              END;

                                                   DataClassification=CustomerContent;
                                                   CaptionML=[ENU=ISO Numeric Code;
                                                              ESM=C¢digo num‚rico ISO;
                                                              FRC=Code num‚rique ISO;
                                                              ENC=ISO Numeric Code] }
    { 6   ;   ;EU Country/Region Code;Code10      ;CaptionML=[ENU=EU Country/Region Code;
                                                              ESM=C¢d. pa¡s/regi¢n UE;
                                                              FRC=Code pays/r‚gion Union Europ‚enne;
                                                              ENC=EU Country/Region Code] }
    { 7   ;   ;Intrastat Code      ;Code10        ;CaptionML=[ENU=Intrastat Code;
                                                              ESM=C¢d. Intrastat;
                                                              FRC=Code Intrastat;
                                                              ENC=Intrastat Code] }
    { 8   ;   ;Address Format      ;Option        ;InitValue=City+Post Code;
                                                   OnValidate=BEGIN
                                                                IF xRec."Address Format" <> "Address Format" THEN BEGIN
                                                                  IF "Address Format" = "Address Format"::Custom THEN
                                                                    InitAddressFormat;
                                                                  IF xRec."Address Format" = xRec."Address Format"::Custom THEN
                                                                    ClearCustomAddressFormat;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Address Format;
                                                              ESM=Formato direcci¢n;
                                                              FRC=Format d'adresse;
                                                              ENC=Address Format];
                                                   OptionCaptionML=[ENU=ZIP Code+City,City+ZIP Code,City+State+ZIP Code,Blank Line+ZIP Code+City,,City+State+New Line+ZIP Code,ZIP Code+City+State,,,,,,,Custom;
                                                                    ESM=C.P.+Municipio/Ciudad,Municipio/Ciudad+C.P.,Municipio/Ciudad+Provincia+C.P.,L¡nea en blanco+C.P.+Municipio/Ciudad,,Municipio/Ciudad+Provincia+L¡nea nueva+C.P.,C.P.+Municipio/Ciudad+Provincia,,,,,,,Personalizado;
                                                                    FRC=Code postal+Ville,Ville+Code postal,Ville+Comt‚+Code postal,Ligne vide+Code postal+Ville,,Ville+Comt‚+Nouvelle ligne+Code postal,Code postal+Ville+Comt‚,,,,,,,Personnalis‚;
                                                                    ENC=Postal/ZIP Code+City,City+Postal/ZIP Code,City+Province/State+Postal/ZIP Code,Blank Line+Postal/ZIP Code+City,,City+Province/State+New Line+Postal/ZIP Code,Postal/ZIP Code+City+Province/State,,,,,,,Custom];
                                                   OptionString=Post Code+City,City+Post Code,City+County+Post Code,Blank Line+Post Code+City,,City+County+New Line+Post Code,Post Code+City+County,,,,,,,Custom }
    { 9   ;   ;Contact Address Format;Option      ;InitValue=After Company Name;
                                                   CaptionML=[ENU=Contact Address Format;
                                                              ESM=Formato direcci¢n contacto;
                                                              FRC=Format adresse contact;
                                                              ENC=Contact Address Format];
                                                   OptionCaptionML=[ENU=First,After Company Name,Last;
                                                                    ESM=Primero,Despu‚s empresa,éltimo;
                                                                    FRC=Premier,AprŠs nom de compagnie,Dernier;
                                                                    ENC=First,After Company Name,Last];
                                                   OptionString=First,After Company Name,Last }
    { 10  ;   ;VAT Scheme          ;Code10        ;CaptionML=[ENU=Tax Scheme;
                                                              ESM=Esquema de IVA;
                                                              FRC=R‚gime de TVA;
                                                              ENC=Tax Scheme] }
    { 11  ;   ;Last Modified Date Time;DateTime   ;CaptionML=[ENU=Last Modified Date Time;
                                                              ESM=Fecha y hora de £ltima modificaci¢n;
                                                              FRC=Date-heure derniŠre modification;
                                                              ENC=Last Modified Date Time];
                                                   Editable=No }
    { 12  ;   ;County Name         ;Text30        ;CaptionML=[ENU=State Name;
                                                              ESM=Nombre de la provincia;
                                                              FRC=Nom du comt‚;
                                                              ENC=Province/State Name] }
    { 8000;   ;Id                  ;GUID          ;CaptionML=[ENU=Id;
                                                              ESM=Id.;
                                                              FRC="Code ";
                                                              ENC=Id] }
    { 27000;  ;SAT Country Code    ;Code10        ;TableRelation="SAT Country Code";
                                                   CaptionML=[ENU=SAT Country Code;
                                                              ESM=C¢digo de pa¡s de SAT;
                                                              FRC=Code pays SAT;
                                                              ENC=SAT Country Code] }
  }
  KEYS
  {
    {    ;Code                                    ;Clustered=Yes }
    {    ;EU Country/Region Code                   }
    {    ;Intrastat Code                           }
    {    ;Name                                     }
  }
  FIELDGROUPS
  {
    { 1   ;Brick               ;Code,Name,VAT Scheme                     }
  }
  CODE
  {
    VAR
      CountryRegionNotFilledErr@1000 : TextConst 'ENU=You must specify a country or region.;ESM=Debe especificar un pa¡s o regi¢n.;FRC=Vous devez sp‚cifier un pays ou une r‚gion.;ENC=You must specify a country or region.';
      ISOCodeLengthErr@1002 : TextConst '@@@=%1, %2 - numbers, %3 - actual value;ENU=The length of the string is %1, but it must be equal to %2 characters. Value: %3.;ESM=La longitud de la cadena es %1, pero debe ser igual a %2 caracteres. Valor: %3.;FRC=La longueur de la chaŒne est %1, mais elle doit ˆtre inf‚rieure ou ‚gale … %2ÿcaractŠres. Valeurÿ: %3.;ENC=The length of the string is %1, but it must be equal to %2 characters. Value: %3.';
      ASCIILetterErr@1001 : TextConst 'ENU=must contain ASCII letters only;ESM=solo debe contener letras ASCII;FRC=doit contenir uniquement des lettres ASCII;ENC=must contain ASCII letters only';
      TypeHelper@1003 : Codeunit 10;
      NumericErr@1004 : TextConst 'ENU=must contain numbers only;ESM=solo debe contener n£meros;FRC=doit contenir uniquement des chiffres;ENC=must contain numbers only';

    [External]
    PROCEDURE IsEUCountry@74(CountryRegionCode@1000 : Code[10]) : Boolean;
    VAR
      CountryRegion@1003 : Record 9;
    BEGIN
      IF CountryRegionCode = '' THEN
        ERROR(CountryRegionNotFilledErr);

      IF NOT CountryRegion.GET(CountryRegionCode) THEN
        ERROR(CountryRegionNotFilledErr);

      EXIT(CountryRegion."EU Country/Region Code" <> '');
    END;

    [External]
    PROCEDURE GetNameInCurrentLanguage@75() : Text[50];
    VAR
      CountryRegionTranslation@1001 : Record 11;
      Language@1002 : Record 8;
    BEGIN
      IF CountryRegionTranslation.GET(Code,Language.GetUserLanguage) THEN
        EXIT(CountryRegionTranslation.Name);
      EXIT(Name);
    END;

    [External]
    PROCEDURE CreateAddressFormat@3(CountryCode@1000 : Code[10];LinePosition@1001 : Integer;FieldID@1002 : Integer) : Integer;
    VAR
      CustomAddressFormat@1003 : Record 725;
    BEGIN
      CustomAddressFormat.INIT;
      CustomAddressFormat."Country/Region Code" := Code;
      CustomAddressFormat."Field ID" := FieldID;
      CustomAddressFormat."Line Position" := LinePosition - 1;
      CustomAddressFormat.INSERT;

      IF FieldID <> 0 THEN
        CreateAddressFormatLine(CountryCode,1,FieldID,CustomAddressFormat."Line No.");

      CustomAddressFormat.BuildAddressFormat;
      CustomAddressFormat.MODIFY;

      EXIT(CustomAddressFormat."Line No.");
    END;

    [External]
    PROCEDURE CreateAddressFormatLine@1(CountryCode@1002 : Code[10];FieldPosition@1003 : Integer;FieldID@1000 : Integer;LineNo@1005 : Integer);
    VAR
      CustomAddressFormatLine@1004 : Record 726;
    BEGIN
      CustomAddressFormatLine.INIT;
      CustomAddressFormatLine."Country/Region Code" := CountryCode;
      CustomAddressFormatLine."Line No." := LineNo;
      CustomAddressFormatLine."Field Position" := FieldPosition - 1;
      CustomAddressFormatLine.VALIDATE("Field ID",FieldID);
      CustomAddressFormatLine.INSERT;
    END;

    [External]
    PROCEDURE InitAddressFormat@4();
    VAR
      CompanyInformation@1002 : Record 79;
      CustomAddressFormat@1000 : Record 725;
      LineNo@1001 : Integer;
    BEGIN
      CreateAddressFormat(Code,1,CompanyInformation.FIELDNO(Name));
      CreateAddressFormat(Code,2,CompanyInformation.FIELDNO("Name 2"));
      CreateAddressFormat(Code,3,CompanyInformation.FIELDNO("Contact Person"));
      CreateAddressFormat(Code,4,CompanyInformation.FIELDNO(Address));
      CreateAddressFormat(Code,5,CompanyInformation.FIELDNO("Address 2"));
      CASE xRec."Address Format" OF
        xRec."Address Format"::"City+Post Code":
          BEGIN
            LineNo := CreateAddressFormat(Code,6,0);
            CreateAddressFormatLine(Code,1,CompanyInformation.FIELDNO(City),LineNo);
            CreateAddressFormatLine(Code,2,CompanyInformation.FIELDNO("Post Code"),LineNo);
          END;
        xRec."Address Format"::"Post Code+City",
        xRec."Address Format"::"Blank Line+Post Code+City":
          BEGIN
            LineNo := CreateAddressFormat(Code,6,0);
            CreateAddressFormatLine(Code,1,CompanyInformation.FIELDNO("Post Code"),LineNo);
            CreateAddressFormatLine(Code,2,CompanyInformation.FIELDNO(City),LineNo);
          END;
        xRec."Address Format"::"City+County+New Line+Post Code",
        xRec."Address Format"::"City+County+Post Code":
          BEGIN
            LineNo := CreateAddressFormat(Code,6,0);
            CreateAddressFormatLine(Code,1,CompanyInformation.FIELDNO(City),LineNo);
            CreateAddressFormatLine(Code,2,CompanyInformation.FIELDNO(County),LineNo);
            CreateAddressFormatLine(Code,3,CompanyInformation.FIELDNO("Post Code"),LineNo);
          END;
        xRec."Address Format"::"Post Code+City+County":
          BEGIN
            LineNo := CreateAddressFormat(Code,6,0);
            CreateAddressFormatLine(Code,1,CompanyInformation.FIELDNO("Post Code"),LineNo);
            CreateAddressFormatLine(Code,2,CompanyInformation.FIELDNO(City),LineNo);
            CreateAddressFormatLine(Code,3,CompanyInformation.FIELDNO(County),LineNo);
          END;
      END;
      IF LineNo <> 0 THEN BEGIN
        CustomAddressFormat.GET(Code,LineNo);
        CustomAddressFormat.BuildAddressFormat;
        CustomAddressFormat.MODIFY;
      END;
    END;

    LOCAL PROCEDURE ClearCustomAddressFormat@2();
    VAR
      CustomAddressFormat@1000 : Record 725;
    BEGIN
      CustomAddressFormat.SETRANGE("Country/Region Code",Code);
      CustomAddressFormat.DELETEALL(TRUE);
    END;

    BEGIN
    END.
  }
}

OBJECT Table 10 Shipment Method
{
  OBJECT-PROPERTIES
  {
    Date=03/24/19;
    Time=12:00:00 PM;
    Version List=NAVW114.00;
  }
  PROPERTIES
  {
    DataCaptionFields=Code,Description;
    OnInsert=BEGIN
               SetLastModifiedDateTime;
             END;

    OnModify=BEGIN
               SetLastModifiedDateTime;
             END;

    OnDelete=VAR
               ShipmentTermsTranslation@1000 : Record 463;
             BEGIN
               WITH ShipmentTermsTranslation DO BEGIN
                 SETRANGE("Shipment Method",Code);
                 DELETEALL
               END;
             END;

    OnRename=BEGIN
               SetLastModifiedDateTime;
             END;

    CaptionML=[ENU=Shipment Method;
               ESM=M‚todo de env¡o;
               FRC=M‚thode de livraison;
               ENC=Shipment Method];
    LookupPageID=Page11;
  }
  FIELDS
  {
    { 1   ;   ;Code                ;Code10        ;CaptionML=[ENU=Code;
                                                              ESM=C¢digo;
                                                              FRC=Code;
                                                              ENC=Code];
                                                   NotBlank=Yes }
    { 2   ;   ;Description         ;Text100       ;CaptionML=[ENU=Description;
                                                              ESM=Descripci¢n;
                                                              FRC=Description;
                                                              ENC=Description] }
    { 8   ;   ;Last Modified Date Time;DateTime   ;CaptionML=[ENU=Last Modified Date Time;
                                                              ESM=Fecha y hora de £ltima modificaci¢n;
                                                              FRC=Date-heure derniŠre modification;
                                                              ENC=Last Modified Date Time];
                                                   Editable=No }
    { 8000;   ;Id                  ;GUID          ;CaptionML=[ENU=Id;
                                                              ESM=Id.;
                                                              FRC="Code ";
                                                              ENC=Id] }
  }
  KEYS
  {
    {    ;Code                                    ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {

    [External]
    PROCEDURE TranslateDescription@1(VAR ShipmentMethod@1000 : Record 10;Language@1001 : Code[10]);
    VAR
      ShipmentMethodTranslation@1002 : Record 463;
    BEGIN
      IF ShipmentMethodTranslation.GET(ShipmentMethod.Code,Language) THEN
        ShipmentMethod.Description := ShipmentMethodTranslation.Description;
    END;

    LOCAL PROCEDURE SetLastModifiedDateTime@16();
    BEGIN
      "Last Modified Date Time" := CURRENTDATETIME;
    END;

    BEGIN
    END.
  }
}

OBJECT Table 11 Country/Region Translation
{
  OBJECT-PROPERTIES
  {
    Date=11/22/17;
    Time=12:00:00 PM;
    Version List=NAVW111.00;
  }
  PROPERTIES
  {
    CaptionML=[ENU=Country/Region Translation;
               ESM=Traducci¢n de pa¡s/regi¢n;
               FRC=Traduction par pays/r‚gion;
               ENC=Country/Region Translation];
  }
  FIELDS
  {
    { 1   ;   ;Country/Region Code ;Code10        ;TableRelation=Country/Region;
                                                   CaptionML=[ENU=Country/Region Code;
                                                              ESM=C¢digo pa¡s/regi¢n;
                                                              FRC=Code pays/r‚gion;
                                                              ENC=Country/Region Code];
                                                   NotBlank=Yes }
    { 2   ;   ;Language Code       ;Code10        ;TableRelation=Language;
                                                   CaptionML=[ENU=Language Code;
                                                              ESM=C¢digo idioma;
                                                              FRC=Code langue;
                                                              ENC=Language Code] }
    { 3   ;   ;Name                ;Text50        ;CaptionML=[ENU=Name;
                                                              ESM=Nombre;
                                                              FRC=Nom;
                                                              ENC=Name] }
  }
  KEYS
  {
    {    ;Country/Region Code,Language Code       ;Clustered=Yes }
  }
  FIELDGROUPS
  {
  }
  CODE
  {

    BEGIN
    END.
  }
}

OBJECT Table 13 Salesperson/Purchaser
{
  OBJECT-PROPERTIES
  {
    Date=03/24/19;
    Time=12:00:00 PM;
    Version List=NAVW114.00;
  }
  PROPERTIES
  {
    DataCaptionFields=Code,Name;
    OnInsert=BEGIN
               VALIDATE(Code);
               DimMgt.UpdateDefaultDim(
                 DATABASE::"Salesperson/Purchaser",Code,
                 "Global Dimension 1 Code","Global Dimension 2 Code");
             END;

    OnModify=BEGIN
               VALIDATE(Code);
             END;

    OnDelete=VAR
               TeamSalesperson@1000 : Record 5084;
             BEGIN
               TeamSalesperson.RESET;
               TeamSalesperson.SETRANGE("Salesperson Code",Code);
               TeamSalesperson.DELETEALL;
               DimMgt.DeleteDefaultDim(DATABASE::"Salesperson/Purchaser",Code);
             END;

    OnRename=BEGIN
               DimMgt.RenameDefaultDim(DATABASE::"Salesperson/Purchaser",xRec.Code,Code);
             END;

    CaptionML=[ENU=Salesperson/Purchaser;
               ESM=Vendedor/Comprador;
               FRC=Repr‚sentant/acheteur;
               ENC=Salesperson/Purchaser];
    LookupPageID=Page14;
  }
  FIELDS
  {
    { 1   ;   ;Code                ;Code20        ;OnValidate=BEGIN
                                                                TESTFIELD(Code);
                                                              END;

                                                   CaptionML=[ENU=Code;
                                                              ESM=C¢digo;
                                                              FRC=Code;
                                                              ENC=Code];
                                                   NotBlank=Yes }
    { 2   ;   ;Name                ;Text50        ;CaptionML=[ENU=Name;
                                                              ESM=Nombre;
                                                              FRC=Nom;
                                                              ENC=Name] }
    { 3   ;   ;Commission %        ;Decimal       ;CaptionML=[ENU=Commission %;
                                                              ESM=% Comisi¢n;
                                                              FRC=% commission;
                                                              ENC=Commission %];
                                                   DecimalPlaces=2:2;
                                                   MinValue=0;
                                                   MaxValue=100 }
    { 140 ;   ;Image               ;Media         ;ExtendedDatatype=Person;
                                                   CaptionML=[ENU=Image;
                                                              ESM=Imagen;
                                                              FRC=Image;
                                                              ENC=Image] }
    { 150 ;   ;Privacy Blocked     ;Boolean       ;CaptionML=[ENU=Privacy Blocked;
                                                              ESM=Privacidad bloqueada;
                                                              FRC=Confidentialit‚ bloqu‚e;
                                                              ENC=Privacy Blocked] }
    { 5050;   ;Global Dimension 1 Code;Code20     ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(1));
                                                   OnValidate=BEGIN
                                                                ValidateShortcutDimCode(1,"Global Dimension 1 Code");
                                                              END;

                                                   CaptionML=[ENU=Global Dimension 1 Code;
                                                              ESM=C¢d. dimensi¢n global 1;
                                                              FRC=Code de dimension principal 1;
                                                              ENC=Global Dimension 1 Code];
                                                   CaptionClass='1,1,1' }
    { 5051;   ;Global Dimension 2 Code;Code20     ;TableRelation="Dimension Value".Code WHERE (Global Dimension No.=CONST(2));
                                                   OnValidate=BEGIN
                                                                ValidateShortcutDimCode(2,"Global Dimension 2 Code");
                                                              END;

                                                   CaptionML=[ENU=Global Dimension 2 Code;
                                                              ESM=C¢d. dimensi¢n global 2;
                                                              FRC=Code de dimension principal 2;
                                                              ENC=Global Dimension 2 Code];
                                                   CaptionClass='1,1,2' }
    { 5052;   ;E-Mail              ;Text80        ;OnValidate=VAR
                                                                MailManagement@1000 : Codeunit 9520;
                                                              BEGIN
                                                                IF ("Search E-Mail" = UPPERCASE(xRec."E-Mail")) OR ("Search E-Mail" = '') THEN
                                                                  "Search E-Mail" := "E-Mail";
                                                                MailManagement.ValidateEmailAddressField("E-Mail");
                                                              END;

                                                   ExtendedDatatype=E-Mail;
                                                   CaptionML=[ENU=Email;
                                                              ESM=Correo electr¢nico;
                                                              FRC=Courriel;
                                                              ENC=Email] }
    { 5053;   ;Phone No.           ;Text30        ;ExtendedDatatype=Phone No.;
                                                   CaptionML=[ENU=Phone No.;
                                                              ESM=N§ tel‚fono;
                                                              FRC=Nø t‚l‚phone;
                                                              ENC=Phone No.] }
    { 5054;   ;Next Task Date      ;Date          ;FieldClass=FlowField;
                                                   CalcFormula=Min(To-do.Date WHERE (Salesperson Code=FIELD(Code),
                                                                                     Closed=CONST(No),
                                                                                     System To-do Type=FILTER(Organizer|Salesperson Attendee)));
                                                   CaptionML=[ENU=Next Task Date;
                                                              ESM=Pr¢xima fecha tarea;
                                                              FRC=Date de la prochaine tƒche;
                                                              ENC=Next Task Date];
                                                   Editable=No }
    { 5055;   ;No. of Opportunities;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Count("Opportunity Entry" WHERE (Salesperson Code=FIELD(Code),
                                                                                                Active=CONST(Yes),
                                                                                                Estimated Close Date=FIELD(Date Filter),
                                                                                                Action Taken=FIELD(Action Taken Filter),
                                                                                                Sales Cycle Code=FIELD(Sales Cycle Filter),
                                                                                                Sales Cycle Stage=FIELD(Sales Cycle Stage Filter),
                                                                                                Probability %=FIELD(Probability % Filter),
                                                                                                Completed %=FIELD(Completed % Filter)));
                                                   CaptionML=[ENU=No. of Opportunities;
                                                              ESM=N§ de oportunidades;
                                                              FRC=Nbre opportunit‚s;
                                                              ENC=No. of Opportunities];
                                                   Editable=No }
    { 5056;   ;Estimated Value (LCY);Decimal      ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Opportunity Entry"."Estimated Value (LCY)" WHERE (Salesperson Code=FIELD(Code),
                                                                                                                      Active=CONST(Yes),
                                                                                                                      Estimated Close Date=FIELD(Date Filter),
                                                                                                                      Action Taken=FIELD(Action Taken Filter),
                                                                                                                      Sales Cycle Code=FIELD(Sales Cycle Filter),
                                                                                                                      Sales Cycle Stage=FIELD(Sales Cycle Stage Filter),
                                                                                                                      Probability %=FIELD(Probability % Filter),
                                                                                                                      Completed %=FIELD(Completed % Filter)));
                                                   CaptionML=[ENU=Estimated Value ($);
                                                              ESM=Valor estimado ($);
                                                              FRC=Valeur estim‚e ($);
                                                              ENC=Estimated Value ($)];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 5057;   ;Calcd. Current Value (LCY);Decimal ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Opportunity Entry"."Calcd. Current Value (LCY)" WHERE (Salesperson Code=FIELD(Code),
                                                                                                                           Active=CONST(Yes),
                                                                                                                           Estimated Close Date=FIELD(Date Filter),
                                                                                                                           Action Taken=FIELD(Action Taken Filter),
                                                                                                                           Sales Cycle Code=FIELD(Sales Cycle Filter),
                                                                                                                           Sales Cycle Stage=FIELD(Sales Cycle Stage Filter),
                                                                                                                           Probability %=FIELD(Probability % Filter),
                                                                                                                           Completed %=FIELD(Completed % Filter)));
                                                   CaptionML=[ENU=Calcd. Current Value ($);
                                                              ESM=Valor actual calculado ($);
                                                              FRC=Valeur calcul‚e ($);
                                                              ENC=Calcd. Current Value ($)];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 5058;   ;Date Filter         ;Date          ;FieldClass=FlowFilter;
                                                   CaptionML=[ENU=Date Filter;
                                                              ESM=Filtro fecha;
                                                              FRC=Filtre date;
                                                              ENC=Date Filter] }
    { 5059;   ;No. of Interactions ;Integer       ;FieldClass=FlowField;
                                                   CalcFormula=Count("Interaction Log Entry" WHERE (Salesperson Code=FIELD(Code),
                                                                                                    Canceled=CONST(No),
                                                                                                    Date=FIELD(Date Filter),
                                                                                                    Postponed=CONST(No)));
                                                   CaptionML=[ENU=No. of Interactions;
                                                              ESM=N§ de interacciones;
                                                              FRC=Nbre interactions;
                                                              ENC=No. of Interactions];
                                                   Editable=No }
    { 5060;   ;Cost (LCY)          ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Interaction Log Entry"."Cost (LCY)" WHERE (Salesperson Code=FIELD(Code),
                                                                                                               Canceled=CONST(No),
                                                                                                               Date=FIELD(Date Filter),
                                                                                                               Postponed=CONST(No)));
                                                   CaptionML=[ENU=Cost ($);
                                                              ESM=Costo ($);
                                                              FRC=Co–t ($);
                                                              ENC=Cost ($)];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 5061;   ;Duration (Min.)     ;Decimal       ;FieldClass=FlowField;
                                                   CalcFormula=Sum("Interaction Log Entry"."Duration (Min.)" WHERE (Salesperson Code=FIELD(Code),
                                                                                                                    Canceled=CONST(No),
                                                                                                                    Date=FIELD(Date Filter),
                                                                                                                    Postponed=CONST(No)));
                                                   CaptionML=[ENU=Duration (Min.);
                                                              ESM=Duraci¢n (Min.);
                                                              FRC=Dur‚e (min.);
                                                              ENC=Duration (Min.)];
                                                   DecimalPlaces=0:0;
                                                   Editable=No }
    { 5062;   ;Job Title           ;Text30        ;CaptionML=[ENU=Job Title;
                                                              ESM=Cargo;
                                                              FRC=Fonction;
                                                              ENC=Job Title] }
    { 5063;   ;Action Taken Filter ;Option        ;FieldClass=FlowFilter;
                                                   CaptionML=[ENU=Action Taken Filter;
                                                              ESM=Filtro accci¢n tomada;
                                                              FRC=Filtre action choisie;
                                                              ENC=Action Taken Filter];
                                                   OptionCaptionML=[ENU=" ,Next,Previous,Updated,Jumped,Won,Lost";
                                                                    ESM=" ,Siguiente,Anterior,Actualizado,Saltado,Ganado,Perdido";
                                                                    FRC=" ,Suivante,Pr‚c‚dente,Mise … jour,Omise,Gagn‚e,Perdue";
                                                                    ENC=" ,Next,Previous,Updated,Jumped,Won,Lost"];
                                                   OptionString=[ ,Next,Previous,Updated,Jumped,Won,Lost] }
    { 5064;   ;Sales Cycle Filter  ;Code10        ;FieldClass=FlowFilter;
                                                   TableRelation="Sales Cycle";
                                                   CaptionML=[ENU=Sales Cycle Filter;
                                                              ESM=Filtro ciclo ventas;
                                                              FRC=Filtre cycle de vente;
                                                              ENC=Sales Cycle Filter] }
    { 5065;   ;Sales Cycle Stage Filter;Integer   ;FieldClass=FlowFilter;
                                                   TableRelation="Sales Cycle Stage".Stage WHERE (Sales Cycle Code=FIELD(Sales Cycle Filter));
                                                   CaptionML=[ENU=Sales Cycle Stage Filter;
                                                              ESM=Filtro etapa ciclo ventas;
                                                              FRC=Filtre de phase de cycle de vente;
                                                              ENC=Sales Cycle Stage Filter] }
    { 5066;   ;Probability % Filter;Decimal       ;FieldClass=FlowFilter;
                                                   CaptionML=[ENU=Probability % Filter;
                                                              ESM=Filtro % probabilidad;
                                                              FRC=Filtre % probabilit‚;
                                                              ENC=Probability % Filter];
                                                   DecimalPlaces=1:1;
                                                   MinValue=0;
                                                   MaxValue=100 }
    { 5067;   ;Completed % Filter  ;Decimal       ;FieldClass=FlowFilter;
                                                   CaptionML=[ENU=Completed % Filter;
                                                              ESM=Filtro % completado;
                                                              FRC=Filtre % termin‚;
                                                              ENC=Completed % Filter];
                                                   DecimalPlaces=1:1;
                                                   MinValue=0;
                                                   MaxValue=100 }
    { 5068;   ;Avg. Estimated Value (LCY);Decimal ;FieldClass=FlowField;
                                                   CalcFormula=Average("Opportunity Entry"."Estimated Value (LCY)" WHERE (Salesperson Code=FIELD(Code),
                                                                                                                          Active=CONST(Yes),
                                                                                                                          Estimated Close Date=FIELD(Date Filter),
                                                                                                                          Action Taken=FIELD(Action Taken Filter),
                                                                                                                          Sales Cycle Code=FIELD(Sales Cycle Filter),
                                                                                                                          Sales Cycle Stage=FIELD(Sales Cycle Stage Filter),
                                                                                                                          Probability %=FIELD(Probability % Filter),
                                                                                                                          Completed %=FIELD(Completed % Filter)));
                                                   CaptionML=[ENU=Avg. Estimated Value ($);
                                                              ESM=Valor estimado promedio ($);
                                                              FRC=Valeur moyenne estim‚e ($);
                                                              ENC=Avg. Estimated Value ($)];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 5069;   ;Avg.Calcd. Current Value (LCY);Decimal;
                                                   FieldClass=FlowField;
                                                   CalcFormula=Average("Opportunity Entry"."Calcd. Current Value (LCY)" WHERE (Salesperson Code=FIELD(Code),
                                                                                                                               Active=CONST(Yes),
                                                                                                                               Estimated Close Date=FIELD(Date Filter),
                                                                                                                               Action Taken=FIELD(Action Taken Filter),
                                                                                                                               Sales Cycle Code=FIELD(Sales Cycle Filter),
                                                                                                                               Sales Cycle Stage=FIELD(Sales Cycle Stage Filter),
                                                                                                                               Probability %=FIELD(Probability % Filter),
                                                                                                                               Completed %=FIELD(Completed % Filter)));
                                                   CaptionML=[ENU=Avg.Calcd. Current Value ($);
                                                              ESM=Valor actual calc. medio ($);
                                                              FRC=Valeur moyenne calcul‚e ($);
                                                              ENC=Avg.Calcd. Current Value ($)];
                                                   Editable=No;
                                                   AutoFormatType=1 }
    { 5070;   ;Contact Filter      ;Code20        ;FieldClass=FlowFilter;
                                                   TableRelation=Contact;
                                                   CaptionML=[ENU=Contact Filter;
                                                              ESM=Filtro contacto;
                                                              FRC=Filtre contact;
                                                              ENC=Contact Filter] }
    { 5071;   ;Contact Company Filter;Code20      ;FieldClass=FlowFilter;
                                                   TableRelation=Contact WHERE (Type=CONST(Company));
                                                   CaptionML=[ENU=Contact Company Filter;
                                                              ESM=Filtro empresa contacto;
                                                              FRC=Filtre compagnie;
                                                              ENC=Contact Company Filter] }
    { 5072;   ;Campaign Filter     ;Code20        ;FieldClass=FlowFilter;
                                                   TableRelation=Campaign;
                                                   CaptionML=[ENU=Campaign Filter;
                                                              ESM=Filtro campa¤a;
                                                              FRC=Filtre promotion;
                                                              ENC=Campaign Filter] }
    { 5073;   ;Estimated Value Filter;Decimal     ;FieldClass=FlowFilter;
                                                   CaptionML=[ENU=Estimated Value Filter;
                                                              ESM=Filtro valor estimado;
                                                              FRC=Filtre valeur estim‚e;
                                                              ENC=Estimated Value Filter];
                                                   AutoFormatType=1 }
    { 5074;   ;Calcd. Current Value Filter;Decimal;FieldClass=FlowFilter;
                                                   CaptionML=[ENU=Calcd. Current Value Filter;
                                                              ESM=Filtro valor actual calculado;
                                                              FRC=Filtre valeur calcul‚e;
                                                              ENC=Calcd. Current Value Filter];
                                                   AutoFormatType=1 }
    { 5075;   ;Chances of Success % Filter;Decimal;FieldClass=FlowFilter;
                                                   CaptionML=[ENU=Chances of Success % Filter;
                                                              ESM=Filtro % posibilidades ‚xito;
                                                              FRC=Filtre % chance de succŠs;
                                                              ENC=Chances of Success % Filter];
                                                   DecimalPlaces=0:0;
                                                   MinValue=0;
                                                   MaxValue=100 }
    { 5076;   ;Task Status Filter  ;Option        ;FieldClass=FlowFilter;
                                                   CaptionML=[ENU=Task Status Filter;
                                                              ESM=Filtro de estado de tarea;
                                                              FRC=Filtre de l'‚tat de la tƒche;
                                                              ENC=Task Status Filter];
                                                   OptionCaptionML=[ENU=Not Started,In Progress,Completed,Waiting,Postponed;
                                                                    ESM=No iniciado,En progreso,Completado,Esperando,Aplazado;
                                                                    FRC=Non d‚marr‚,En cours,Termin‚,En attente,Report‚;
                                                                    ENC=Not Started,In Progress,Completed,Waiting,Postponed];
                                                   OptionString=Not Started,In Progress,Completed,Waiting,Postponed }
    { 5077;   ;Closed Task Filter  ;Boolean       ;FieldClass=FlowFilter;
                                                   CaptionML=[ENU=Closed Task Filter;
                                                              ESM=Filtro de tarea cerrado;
                                                              FRC=Filtre Tƒche termin‚e;
                                                              ENC=Closed Task Filter] }
    { 5078;   ;Priority Filter     ;Option        ;FieldClass=FlowFilter;
                                                   CaptionML=[ENU=Priority Filter;
                                                              ESM=Filtro prioridad;
                                                              FRC=Filtre priorit‚;
                                                              ENC=Priority Filter];
                                                   OptionCaptionML=[ENU=Low,Normal,High;
                                                                    ESM=Baja,Normal,Alta;
                                                                    FRC=Faible,Normal,Haut;
                                                                    ENC=Low,Normal,High];
                                                   OptionString=Low,Normal,High }
    { 5079;   ;Team Filter         ;Code10        ;FieldClass=FlowFilter;
                                                   TableRelation=Team;
                                                   CaptionML=[ENU=Team Filter;
                                                              ESM=Filtro equipo;
                                                              FRC=Filtre ‚quipe;
                                                              ENC=Team Filter] }
    { 5082;   ;Opportunity Entry Exists;Boolean   ;FieldClass=FlowField;
                                                   CalcFormula=Exist("Opportunity Entry" WHERE (Salesperson Code=FIELD(Code),
                                                                                                Active=CONST(Yes),
                                                                                                Contact No.=FIELD(Contact Filter),
                                                                                                Contact Company No.=FIELD(Contact Company Filter),
                                                                                                Sales Cycle Code=FIELD(Sales Cycle Filter),
                                                                                                Sales Cycle Stage=FIELD(Sales Cycle Stage Filter),
                                                                                                Campaign No.=FIELD(Campaign Filter),
                                                                                                Action Taken=FIELD(Action Taken Filter),
                                                                                                Estimated Value (LCY)=FIELD(Estimated Value Filter),
                                                                                                Calcd. Current Value (LCY)=FIELD(Calcd. Current Value Filter),
                                                                                                Completed %=FIELD(Completed % Filter),
                                                                                                Chances of Success %=FIELD(Chances of Success % Filter),
                                                                                                Probability %=FIELD(Probability % Filter),
                                                                                                Estimated Close Date=FIELD(Date Filter),
                                                                                                Close Opportunity Code=FIELD(Close Opportunity Filter)));
                                                   CaptionML=[ENU=Opportunity Entry Exists;
                                                              ESM=Existe mov. oportunidad;
                                                              FRC=Ligne opportunit‚ existante;
                                                              ENC=Opportunity Entry Exists];
                                                   Editable=No }
    { 5083;   ;Task Entry Exists   ;Boolean       ;FieldClass=FlowField;
                                                   CalcFormula=Exist(To-do WHERE (Salesperson Code=FIELD(Code),
                                                                                  Contact No.=FIELD(Contact Filter),
                                                                                  Contact Company No.=FIELD(Contact Company Filter),
                                                                                  Campaign No.=FIELD(Campaign Filter),
                                                                                  Team Code=FIELD(Team Filter),
                                                                                  Status=FIELD(Task Status Filter),
                                                                                  Closed=FIELD(Closed Task Filter),
                                                                                  Priority=FIELD(Priority Filter),
                                                                                  Date=FIELD(Date Filter)));
                                                   CaptionML=[ENU=Task Entry Exists;
                                                              ESM=Existe movimiento de tarea;
                                                              FRC=Entr‚e de tƒche existante;
                                                              ENC=Task Entry Exists];
                                                   Editable=No }
    { 5084;   ;Close Opportunity Filter;Code10    ;FieldClass=FlowFilter;
                                                   TableRelation="Close Opportunity Code";
                                                   CaptionML=[ENU=Close Opportunity Filter;
                                                              ESM=Cerrar filtro oportunidad;
                                                              FRC=Filtre fin opportunit‚;
                                                              ENC=Close Opportunity Filter] }
    { 5085;   ;Search E-Mail       ;Code80        ;CaptionML=[ENU=Search Email;
                                                              ESM=Correo electr¢nico de b£squeda;
                                                              FRC=Courriel de recherche;
                                                              ENC=Search Email] }
    { 5086;   ;E-Mail 2            ;Text80        ;OnValidate=VAR
                                                                MailManagement@1000 : Codeunit 9520;
                                                              BEGIN
                                                                MailManagement.ValidateEmailAddressField("E-Mail 2");
                                                              END;

                                                   ExtendedDatatype=E-Mail;
                                                   CaptionML=[ENU=Email 2;
                                                              ESM=Correo electr¢nico 2;
                                                              FRC=Courriel 2;
                                                              ENC=Email 2] }
  }
  KEYS
  {
    {    ;Code                                    ;Clustered=Yes }
    {    ;Search E-Mail                            }
  }
  FIELDGROUPS
  {
    { 1   ;Brick               ;Code,Name,Image                          }
  }
  CODE
  {
    VAR
      DimMgt@1000 : Codeunit 408;
      PostActionTxt@1001 : TextConst 'ENU=post;ESM=registre;FRC=reportez;ENC=post';
      CreateActionTxt@1002 : TextConst 'ENU=create;ESM=cree;FRC=cr‚ez;ENC=create';
      SalespersonTxt@1005 : TextConst 'ENU=Salesperson;ESM=Vendedor;FRC=Repr‚sentant;ENC=Salesperson';
      PurchaserTxt@1006 : TextConst 'ENU=Purchaser;ESM=Comprador;FRC=Acheteur;ENC=Purchaser';
      BlockedSalesPersonPurchErr@1003 : TextConst '@@@="%1 = post or create, %2 = Salesperson / Purchaser, %3 = salesperson / purchaser code.";ENU=You cannot %1 this document because %2 %3 is blocked due to privacy.;ESM=No puede %1 este documento porque el %2 %3 est  bloqueado por motivos de privacidad.;FRC=Vous ne pouvez pas %1 ce document, car %2 %3 est bloqu‚ pour des raisons de confidentialit‚.;ENC=You cannot %1 this document because %2 %3 is blocked due to privacy.';
      PrivacyBlockedGenericTxt@1004 : TextConst '@@@="%1 = Salesperson / Purchaser, %2 = salesperson / purchaser code.";ENU=Privacy Blocked must not be true for %1 %2.;ESM=La opci¢n Privacidad bloqueada no debe ser verdadera para %1 %2.;FRC=Le champ Confidentialit‚ bloqu‚e ne doit pas avoir la valeur true pour %1 %2.;ENC=Privacy Blocked must not be true for %1 %2.';

    [External]
    PROCEDURE CreateInteraction@10();
    VAR
      TempSegmentLine@1000 : TEMPORARY Record 5077;
    BEGIN
      TempSegmentLine.CreateInteractionFromSalesperson(Rec);
    END;

    [External]
    PROCEDURE ValidateShortcutDimCode@29(FieldNumber@1000 : Integer;VAR ShortcutDimCode@1001 : Code[20]);
    BEGIN
      DimMgt.ValidateDimValueCode(FieldNumber,ShortcutDimCode);
      DimMgt.SaveDefaultDim(DATABASE::"Salesperson/Purchaser",Code,FieldNumber,ShortcutDimCode);
      MODIFY;
    END;

    [External]
    PROCEDURE GetPrivacyBlockedTransactionText@4(SalespersonPurchaser2@1001 : Record 13;IsPostAction@1000 : Boolean;IsSalesperson@1003 : Boolean) : Text[150];
    VAR
      Action@1002 : Text[30];
      Type@1004 : Text[20];
    BEGIN
      IF IsPostAction THEN
        Action := PostActionTxt
      ELSE
        Action := CreateActionTxt;
      IF IsSalesperson THEN
        Type := SalespersonTxt
      ELSE
        Type := PurchaserTxt;
      EXIT(STRSUBSTNO(BlockedSalesPersonPurchErr,Action,Type,SalespersonPurchaser2.Code));
    END;

    [External]
    PROCEDURE GetPrivacyBlockedGenericText@2(SalespersonPurchaser2@1000 : Record 13;IsSalesperson@1001 : Boolean) : Text[150];
    VAR
      Type@1002 : Text[20];
    BEGIN
      IF IsSalesperson THEN
        Type := SalespersonTxt
      ELSE
        Type := PurchaserTxt;
      EXIT(STRSUBSTNO(PrivacyBlockedGenericTxt,Type,SalespersonPurchaser2.Code));
    END;

    [External]
    PROCEDURE VerifySalesPersonPurchaserPrivacyBlocked@1(SalespersonPurchaser2@1000 : Record 13) : Boolean;
    BEGIN
      IF SalespersonPurchaser2."Privacy Blocked" THEN
        EXIT(TRUE);
      EXIT(FALSE);
    END;

    BEGIN
    END.
  }
}

OBJECT Table 14 Location
{
  OBJECT-PROPERTIES
  {
    Date=03/24/19;
    Time=12:00:00 PM;
    Version List=NAVW114.00,NAVNA14.00;
  }
  PROPERTIES
  {
    DataCaptionFields=Code,Name;
    OnDelete=VAR
               TransferRoute@1000 : Record 5742;
               WhseEmployee@1003 : Record 7301;
               WorkCenter@1004 : Record 99000754;
               StockkeepingUnit@1001 : Record 5700;
             BEGIN
               StockkeepingUnit.SETRANGE("Location Code",Code);
               IF NOT StockkeepingUnit.ISEMPTY THEN
                 ERROR(CannotDeleteLocSKUExistErr,Code);

               WMSCheckWarehouse;

               TransferRoute.SETRANGE("Transfer-from Code",Code);
               TransferRoute.DELETEALL;
               TransferRoute.RESET;
               TransferRoute.SETRANGE("Transfer-to Code",Code);
               TransferRoute.DELETEALL;

               WhseEmployee.SETRANGE("Location Code",Code);
               WhseEmployee.DELETEALL(TRUE);

               WorkCenter.SETRANGE("Location Code",Code);
               IF WorkCenter.FINDSET(TRUE) THEN
                 REPEAT
                   WorkCenter.VALIDATE("Location Code",'');
                   WorkCenter.MODIFY(TRUE);
                 UNTIL WorkCenter.NEXT = 0;

               CalendarManagement.DeleteCustomizedBaseCalendarData(CustomizedCalendarChange."Source Type"::Location,Code);
             END;

    OnRename=BEGIN
               CalendarManagement.RenameCustomizedBaseCalendarData(CustomizedCalendarChange."Source Type"::Location,Code,xRec.Code);
             END;

    CaptionML=[ENU=Location;
               ESM=Almac‚n;
               FRC=Emplacement;
               ENC=Location];
    LookupPageID=Page15;
    DrillDownPageID=Page15;
  }
  FIELDS
  {
    { 1   ;   ;Code                ;Code10        ;CaptionML=[ENU=Code;
                                                              ESM=C¢digo;
                                                              FRC=Code;
                                                              ENC=Code];
                                                   NotBlank=Yes }
    { 2   ;   ;Name                ;Text100       ;CaptionML=[ENU=Name;
                                                              ESM=Nombre;
                                                              FRC=Nom;
                                                              ENC=Name] }
    { 130 ;   ;Default Bin Code    ;Code20        ;TableRelation=Bin.Code WHERE (Location Code=FIELD(Code));
                                                   CaptionML=[ENU=Default Bin Code;
                                                              ESM=C¢d. ubic. predeterminado;
                                                              FRC=Code de zone par d‚faut;
                                                              ENC=Default Bin Code] }
    { 5700;   ;Name 2              ;Text50        ;CaptionML=[ENU=Name 2;
                                                              ESM=Nombre 2;
                                                              FRC=Nom 2;
                                                              ENC=Name 2] }
    { 5701;   ;Address             ;Text100       ;CaptionML=[ENU=Address;
                                                              ESM=Direcci¢n;
                                                              FRC=Adresse;
                                                              ENC=Address] }
    { 5702;   ;Address 2           ;Text50        ;CaptionML=[ENU=Address 2;
                                                              ESM=Colonia;
                                                              FRC=Adresse 2;
                                                              ENC=Address 2] }
    { 5703;   ;City                ;Text30        ;TableRelation=IF (Country/Region Code=CONST()) "Post Code".City
                                                                 ELSE IF (Country/Region Code=FILTER(<>'')) "Post Code".City WHERE (Country/Region Code=FIELD(Country/Region Code));
                                                   OnValidate=BEGIN
                                                                PostCode.ValidateCity(City,"Post Code",County,"Country/Region Code",(CurrFieldNo <> 0) AND GUIALLOWED);
                                                              END;

                                                   OnLookup=BEGIN
                                                              PostCode.LookupPostCode(City,"Post Code",County,"Country/Region Code");
                                                            END;

                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=City;
                                                              ESM=Municipio/Ciudad;
                                                              FRC=Ville;
                                                              ENC=City] }
    { 5704;   ;Phone No.           ;Text30        ;ExtendedDatatype=Phone No.;
                                                   CaptionML=[ENU=Phone No.;
                                                              ESM=N§ tel‚fono;
                                                              FRC=Nø t‚l‚phone;
                                                              ENC=Phone No.] }
    { 5705;   ;Phone No. 2         ;Text30        ;ExtendedDatatype=Phone No.;
                                                   CaptionML=[ENU=Phone No. 2;
                                                              ESM=N§ tel‚fono 2;
                                                              FRC=Nø t‚l‚phone 2;
                                                              ENC=Phone No. 2] }
    { 5706;   ;Telex No.           ;Text30        ;CaptionML=[ENU=Telex No.;
                                                              ESM=N§ t‚lex;
                                                              FRC=Nø t‚lex;
                                                              ENC=Telex No.] }
    { 5707;   ;Fax No.             ;Text30        ;CaptionML=[ENU=Fax No.;
                                                              ESM=N§ fax;
                                                              FRC=Nø t‚l‚copieur;
                                                              ENC=Fax No.] }
    { 5713;   ;Contact             ;Text100       ;CaptionML=[ENU=Contact;
                                                              ESM=Contacto;
                                                              FRC=Contact;
                                                              ENC=Contact] }
    { 5714;   ;Post Code           ;Code20        ;TableRelation=IF (Country/Region Code=CONST()) "Post Code"
                                                                 ELSE IF (Country/Region Code=FILTER(<>'')) "Post Code" WHERE (Country/Region Code=FIELD(Country/Region Code));
                                                   OnValidate=BEGIN
                                                                PostCode.ValidatePostCode(City,"Post Code",County,"Country/Region Code",(CurrFieldNo <> 0) AND GUIALLOWED);
                                                              END;

                                                   OnLookup=BEGIN
                                                              PostCode.LookupPostCode(City,"Post Code",County,"Country/Region Code");
                                                            END;

                                                   ValidateTableRelation=No;
                                                   TestTableRelation=No;
                                                   CaptionML=[ENU=ZIP Code;
                                                              ESM=C.P.;
                                                              FRC=Code postal;
                                                              ENC=Postal/ZIP Code] }
    { 5715;   ;County              ;Text30        ;CaptionML=[ENU=State;
                                                              ESM=Provincia;
                                                              FRC=Comt‚;
                                                              ENC=Province/State];
                                                   CaptionClass='5,1,' + "Country/Region Code" }
    { 5718;   ;E-Mail              ;Text80        ;OnValidate=VAR
                                                                MailManagement@1000 : Codeunit 9520;
                                                              BEGIN
                                                                MailManagement.ValidateEmailAddressField("E-Mail");
                                                              END;

                                                   ExtendedDatatype=E-Mail;
                                                   CaptionML=[ENU=Email;
                                                              ESM=Correo electr¢nico;
                                                              FRC=Courriel;
                                                              ENC=Email] }
    { 5719;   ;Home Page           ;Text90        ;ExtendedDatatype=URL;
                                                   CaptionML=[ENU=Home Page;
                                                              ESM=P gina principal;
                                                              FRC=Page d'accueil;
                                                              ENC=Home Page] }
    { 5720;   ;Country/Region Code ;Code10        ;TableRelation=Country/Region;
                                                   OnValidate=BEGIN
                                                                PostCode.CheckClearPostCodeCityCounty(City,"Post Code",County,"Country/Region Code",xRec."Country/Region Code");
                                                              END;

                                                   CaptionML=[ENU=Country/Region Code;
                                                              ESM=C¢d. pa¡s/regi¢n;
                                                              FRC=Code pays/r‚gion;
                                                              ENC=Country/Region Code] }
    { 5724;   ;Use As In-Transit   ;Boolean       ;OnValidate=BEGIN
                                                                IF "Use As In-Transit" THEN BEGIN
                                                                  TESTFIELD("Require Put-away",FALSE);
                                                                  TESTFIELD("Require Pick",FALSE);
                                                                  TESTFIELD("Use Cross-Docking",FALSE);
                                                                  TESTFIELD("Require Receive",FALSE);
                                                                  TESTFIELD("Require Shipment",FALSE);
                                                                  TESTFIELD("Bin Mandatory",FALSE);
                                                                END;
                                                              END;

                                                   AccessByPermission=TableData 5740=R;
                                                   CaptionML=[ENU=Use As In-Transit;
                                                              ESM=Utiliz.como tr nsito;
                                                              FRC=Magasin de transit;
                                                              ENC=Use As In-Transit] }
    { 5726;   ;Require Put-away    ;Boolean       ;OnValidate=VAR
                                                                WhseActivHeader@1000 : Record 5766;
                                                                WhseRcptHeader@1001 : Record 7316;
                                                              BEGIN
                                                                WhseRcptHeader.SETRANGE("Location Code",Code);
                                                                IF NOT WhseRcptHeader.ISEMPTY THEN
                                                                  ERROR(Text008,FIELDCAPTION("Require Put-away"),xRec."Require Put-away",WhseRcptHeader.TABLECAPTION);

                                                                IF NOT "Require Put-away" THEN BEGIN
                                                                  TESTFIELD("Directed Put-away and Pick",FALSE);
                                                                  WhseActivHeader.SETRANGE(Type,WhseActivHeader.Type::"Put-away");
                                                                  WhseActivHeader.SETRANGE("Location Code",Code);
                                                                  IF NOT WhseActivHeader.ISEMPTY THEN
                                                                    ERROR(Text008,FIELDCAPTION("Require Put-away"),TRUE,WhseActivHeader.TABLECAPTION);
                                                                  "Use Cross-Docking" := FALSE;
                                                                  "Cross-Dock Bin Code" := '';
                                                                END ELSE
                                                                  CreateInboundWhseRequest;
                                                              END;

                                                   AccessByPermission=TableData 5771=R;
                                                   CaptionML=[ENU=Require Put-away;
                                                              ESM=Ubicaci¢n requerida;
                                                              FRC=Rangement requis;
                                                              ENC=Require Put-away] }
    { 5727;   ;Require Pick        ;Boolean       ;OnValidate=VAR
                                                                WhseActivHeader@1000 : Record 5766;
                                                                WhseShptHeader@1001 : Record 7320;
                                                              BEGIN
                                                                WhseShptHeader.SETRANGE("Location Code",Code);
                                                                IF NOT WhseShptHeader.ISEMPTY THEN
                                                                  ERROR(Text008,FIELDCAPTION("Require Pick"),xRec."Require Pick",WhseShptHeader.TABLECAPTION);

                                                                IF NOT "Require Pick" THEN BEGIN
                                                                  TESTFIELD("Directed Put-away and Pick",FALSE);
                                                                  WhseActivHeader.SETRANGE(Type,WhseActivHeader.Type::Pick);
                                                                  WhseActivHeader.SETRANGE("Location Code",Code);
                                                                  IF NOT WhseActivHeader.ISEMPTY THEN
                                                                    ERROR(Text008,FIELDCAPTION("Require Pick"),TRUE,WhseActivHeader.TABLECAPTION);
                                                                  "Use Cross-Docking" := FALSE;
                                                                  "Cross-Dock Bin Code" := '';
                                                                  "Pick According to FEFO" := FALSE;
                                                                END;
                                                              END;

                                                   AccessByPermission=TableData 5771=R;
                                                   CaptionML=[ENU=Require Pick;
                                                              ESM=Picking requerido;
                                                              FRC=Pr‚lŠvement requis;
                                                              ENC=Require Pick] }
    { 5728;   ;Cross-Dock Due Date Calc.;DateFormula;
                                                   AccessByPermission=TableData 5771=R;
                                                   CaptionML=[ENU=Cross-Dock Due Date Calc.;
                                                              ESM=Calcular fecha vto. tr ns.directo;
                                                              FRC=Calc. date d'‚ch‚ance transbordement;
                                                              ENC=Cross-Dock Due Date Calc.] }
    { 5729;   ;Use Cross-Docking   ;Boolean       ;OnValidate=BEGIN
                                                                IF "Use Cross-Docking" THEN BEGIN
                                                                  TESTFIELD("Require Receive");
                                                                  TESTFIELD("Require Shipment");
                                                                  TESTFIELD("Require Put-away");
                                                                  TESTFIELD("Require Pick");
                                                                END ELSE
                                                                  "Cross-Dock Bin Code" := '';
                                                              END;

                                                   AccessByPermission=TableData 5771=R;
                                                   CaptionML=[ENU=Use Cross-Docking;
                                                              ESM=Utilizar tr nsito directo;
                                                              FRC=Utiliser transbordement;
                                                              ENC=Use Cross-Docking] }
    { 5730;   ;Require Receive     ;Boolean       ;OnValidate=VAR
                                                                WhseRcptHeader@1000 : Record 7316;
                                                                WhseActivHeader@1001 : Record 5766;
                                                              BEGIN
                                                                IF NOT "Require Receive" THEN BEGIN
                                                                  TESTFIELD("Directed Put-away and Pick",FALSE);
                                                                  WhseRcptHeader.SETRANGE("Location Code",Code);
                                                                  IF NOT WhseRcptHeader.ISEMPTY THEN
                                                                    ERROR(Text008,FIELDCAPTION("Require Receive"),TRUE,WhseRcptHeader.TABLECAPTION);
                                                                  "Receipt Bin Code" := '';
                                                                  "Use Cross-Docking" := FALSE;
                                                                  "Cross-Dock Bin Code" := '';
                                                                END ELSE BEGIN
                                                                  WhseActivHeader.SETRANGE(Type,WhseActivHeader.Type::"Put-away");
                                                                  WhseActivHeader.SETRANGE("Location Code",Code);
                                                                  IF NOT WhseActivHeader.ISEMPTY THEN
                                                                    ERROR(Text008,FIELDCAPTION("Require Receive"),FALSE,WhseActivHeader.TABLECAPTION);

                                                                  CreateInboundWhseRequest;
                                                                END;
                                                              END;

                                                   AccessByPermission=TableData 7316=R;
                                                   CaptionML=[ENU=Require Receive;
                                                              ESM=Recepci¢n requerida;
                                                              FRC=R‚ception requise;
                                                              ENC=Require Receive] }
    { 5731;   ;Require Shipment    ;Boolean       ;OnValidate=VAR
                                                                WhseShptHeader@1000 : Record 7320;
                                                                WhseActivHeader@1001 : Record 5766;
                                                              BEGIN
                                                                IF NOT "Require Shipment" THEN BEGIN
                                                                  TESTFIELD("Directed Put-away and Pick",FALSE);
                                                                  WhseShptHeader.SETRANGE("Location Code",Code);
                                                                  IF NOT WhseShptHeader.ISEMPTY THEN
                                                                    ERROR(Text008,FIELDCAPTION("Require Shipment"),TRUE,WhseShptHeader.TABLECAPTION);
                                                                  "Shipment Bin Code" := '';
                                                                  "Use Cross-Docking" := FALSE;
                                                                  "Cross-Dock Bin Code" := '';
                                                                END ELSE BEGIN
                                                                  WhseActivHeader.SETRANGE(Type,WhseActivHeader.Type::Pick);
                                                                  WhseActivHeader.SETRANGE("Location Code",Code);
                                                                  IF NOT WhseActivHeader.ISEMPTY THEN
                                                                    ERROR(Text008,FIELDCAPTION("Require Shipment"),FALSE,WhseActivHeader.TABLECAPTION);
                                                                END;
                                                              END;

                                                   AccessByPermission=TableData 7320=R;
                                                   CaptionML=[ENU=Require Shipment;
                                                              ESM=Env¡o requerido;
                                                              FRC=Livraison requise;
                                                              ENC=Require Shipment] }
    { 5732;   ;Bin Mandatory       ;Boolean       ;OnValidate=VAR
                                                                ItemLedgEntry@1004 : Record 32;
                                                                WhseEntry@1000 : Record 7312;
                                                                WhseActivHeader@1001 : Record 5766;
                                                                WhseShptHeader@1002 : Record 7320;
                                                                WhseRcptHeader@1003 : Record 7316;
                                                                WhseIntegrationMgt@1006 : Codeunit 7317;
                                                                Window@1005 : Dialog;
                                                              BEGIN
                                                                IF "Bin Mandatory" AND NOT xRec."Bin Mandatory" THEN BEGIN
                                                                  Window.OPEN(Text010);
                                                                  ItemLedgEntry.SETRANGE(Open,TRUE);
                                                                  ItemLedgEntry.SETRANGE("Location Code",Code);
                                                                  IF NOT ItemLedgEntry.ISEMPTY THEN
                                                                    ERROR(Text009,FIELDCAPTION("Bin Mandatory"));

                                                                  "Default Bin Selection" := "Default Bin Selection"::"Fixed Bin";
                                                                END;

                                                                WhseActivHeader.SETRANGE("Location Code",Code);
                                                                IF NOT WhseActivHeader.ISEMPTY THEN
                                                                  ERROR(Text008,FIELDCAPTION("Bin Mandatory"),xRec."Bin Mandatory",WhseActivHeader.TABLECAPTION);

                                                                WhseRcptHeader.SETCURRENTKEY("Location Code");
                                                                WhseRcptHeader.SETRANGE("Location Code",Code);
                                                                IF NOT WhseRcptHeader.ISEMPTY THEN
                                                                  ERROR(Text008,FIELDCAPTION("Bin Mandatory"),xRec."Bin Mandatory",WhseRcptHeader.TABLECAPTION);

                                                                WhseShptHeader.SETCURRENTKEY("Location Code");
                                                                WhseShptHeader.SETRANGE("Location Code",Code);
                                                                IF NOT WhseShptHeader.ISEMPTY THEN
                                                                  ERROR(Text008,FIELDCAPTION("Bin Mandatory"),xRec."Bin Mandatory",WhseShptHeader.TABLECAPTION);

                                                                IF NOT "Bin Mandatory" AND xRec."Bin Mandatory" THEN BEGIN
                                                                  WhseEntry.SETRANGE("Location Code",Code);
                                                                  WhseEntry.CALCSUMS("Qty. (Base)");
                                                                  IF WhseEntry."Qty. (Base)" <> 0 THEN
                                                                    ERROR(Text002,FIELDCAPTION("Bin Mandatory"));
                                                                END;

                                                                IF NOT "Bin Mandatory" THEN BEGIN
                                                                  "Open Shop Floor Bin Code" := '';
                                                                  "To-Production Bin Code" := '';
                                                                  "From-Production Bin Code" := '';
                                                                  "Adjustment Bin Code" := '';
                                                                  "Receipt Bin Code" := '';
                                                                  "Shipment Bin Code" := '';
                                                                  "Cross-Dock Bin Code" := '';
                                                                  "To-Assembly Bin Code" := '';
                                                                  "From-Assembly Bin Code" := '';
                                                                  WhseIntegrationMgt.CheckLocationOnManufBins(Rec);
                                                                END;
                                                              END;

                                                   AccessByPermission=TableData 5771=R;
                                                   CaptionML=[ENU=Bin Mandatory;
                                                              ESM=Ubicac. obligatoria;
                                                              FRC=Zone obligatoire;
                                                              ENC=Bin Mandatory] }
    { 5733;   ;Directed Put-away and Pick;Boolean ;OnValidate=VAR
                                                                WhseActivHeader@1002 : Record 5766;
                                                                WhseShptHeader@1001 : Record 7320;
                                                                WhseRcptHeader@1000 : Record 7316;
                                                              BEGIN
                                                                WhseActivHeader.SETRANGE("Location Code",Code);
                                                                IF NOT WhseActivHeader.ISEMPTY THEN
                                                                  ERROR(Text014,FIELDCAPTION("Directed Put-away and Pick"),WhseActivHeader.TABLECAPTION);

                                                                WhseRcptHeader.SETCURRENTKEY("Location Code");
                                                                WhseRcptHeader.SETRANGE("Location Code",Code);
                                                                IF NOT WhseRcptHeader.ISEMPTY THEN
                                                                  ERROR(Text014,FIELDCAPTION("Directed Put-away and Pick"),WhseRcptHeader.TABLECAPTION);

                                                                WhseShptHeader.SETCURRENTKEY("Location Code");
                                                                WhseShptHeader.SETRANGE("Location Code",Code);
                                                                IF NOT WhseShptHeader.ISEMPTY THEN
                                                                  ERROR(Text014,FIELDCAPTION("Directed Put-away and Pick"),WhseShptHeader.TABLECAPTION);

                                                                IF "Directed Put-away and Pick" THEN BEGIN
                                                                  TESTFIELD("Use As In-Transit",FALSE);
                                                                  TESTFIELD("Bin Mandatory");
                                                                  VALIDATE("Require Receive",TRUE);
                                                                  VALIDATE("Require Shipment",TRUE);
                                                                  VALIDATE("Require Put-away",TRUE);
                                                                  VALIDATE("Require Pick",TRUE);
                                                                  VALIDATE("Use Cross-Docking",TRUE);
                                                                  "Default Bin Selection" := "Default Bin Selection"::" ";
                                                                END ELSE
                                                                  VALIDATE("Adjustment Bin Code",'');

                                                                IF (NOT "Directed Put-away and Pick") AND xRec."Directed Put-away and Pick" THEN BEGIN
                                                                  "Default Bin Selection" := "Default Bin Selection"::"Fixed Bin";
                                                                  "Use Put-away Worksheet" := FALSE;
                                                                  VALIDATE("Use Cross-Docking",FALSE);
                                                                END;
                                                              END;

                                                   AccessByPermission=TableData 5771=R;
                                                   CaptionML=[ENU=Directed Put-away and Pick;
                                                              ESM=Ubicac. y pick. directo;
                                                              FRC=Classement et pr‚lŠv. dirig‚s;
                                                              ENC=Directed Put-away and Pick] }
    { 5734;   ;Default Bin Selection;Option       ;OnValidate=BEGIN
                                                                IF ("Default Bin Selection" <> xRec."Default Bin Selection") AND ("Default Bin Selection" = "Default Bin Selection"::" ") THEN
                                                                  TESTFIELD("Directed Put-away and Pick");
                                                              END;

                                                   AccessByPermission=TableData 5771=R;
                                                   CaptionML=[ENU=Default Bin Selection;
                                                              ESM=Selecci¢n ubicaci¢n gen‚rica;
                                                              FRC=S‚lection zone par d‚f.;
                                                              ENC=Default Bin Selection];
                                                   OptionCaptionML=[ENU=" ,Fixed Bin,Last-Used Bin";
                                                                    ESM=" ,Ubic. fija,éltima ubic. utiliz.";
                                                                    FRC=" ,Zone fixe,DerniŠre zone utilis‚e";
                                                                    ENC=" ,Fixed Bin,Last-Used Bin"];
                                                   OptionString=[ ,Fixed Bin,Last-Used Bin] }
    { 5790;   ;Outbound Whse. Handling Time;DateFormula;
                                                   AccessByPermission=TableData 14=R;
                                                   CaptionML=[ENU=Outbound Whse. Handling Time;
                                                              ESM=Tiempo manip. alm. salida;
                                                              FRC=D‚lai d‚senlogement;
                                                              ENC=Outbound Whse. Handling Time] }
    { 5791;   ;Inbound Whse. Handling Time;DateFormula;
                                                   AccessByPermission=TableData 14=R;
                                                   CaptionML=[ENU=Inbound Whse. Handling Time;
                                                              ESM=Tiempo manip. alm. entrada;
                                                              FRC=D‚lai enlogement;
                                                              ENC=Inbound Whse. Handling Time] }
    { 7305;   ;Put-away Template Code;Code10      ;TableRelation="Put-away Template Header";
                                                   CaptionML=[ENU=Put-away Template Code;
                                                              ESM=C¢d. plantilla ubicar;
                                                              FRC=Code modŠle rangement;
                                                              ENC=Put-away Template Code] }
    { 7306;   ;Use Put-away Worksheet;Boolean     ;AccessByPermission=TableData 5771=R;
                                                   CaptionML=[ENU=Use Put-away Worksheet;
                                                              ESM=Utilizar hoj. trab. ubicaci¢n;
                                                              FRC=Utiliser feuille rangement;
                                                              ENC=Use Put-away Worksheet] }
    { 7307;   ;Pick According to FEFO;Boolean     ;AccessByPermission=TableData 5771=R;
                                                   CaptionML=[ENU=Pick According to FEFO;
                                                              ESM=Picking seg£n FEFO (Primero en caducar, primero en salir);
                                                              FRC=Pr‚lever selon FEFO;
                                                              ENC=Pick According to FEFO] }
    { 7308;   ;Allow Breakbulk     ;Boolean       ;AccessByPermission=TableData 5771=R;
                                                   CaptionML=[ENU=Allow Breakbulk;
                                                              ESM=Permite divisi¢n bulto;
                                                              FRC=Autoriser d‚conditionnement;
                                                              ENC=Allow Breakbulk] }
    { 7309;   ;Bin Capacity Policy ;Option        ;AccessByPermission=TableData 5771=R;
                                                   CaptionML=[ENU=Bin Capacity Policy;
                                                              ESM=Directiva capacidad ubicaci¢n;
                                                              FRC=Politique capacit‚ zone;
                                                              ENC=Bin Capacity Policy];
                                                   OptionCaptionML=[ENU=Never Check Capacity,Allow More Than Max. Capacity,Prohibit More Than Max. Cap.;
                                                                    ESM=Nunca comprob. capacidad,Permite m s que capac. m x.,Prohibido m s que cap. m x..;
                                                                    FRC=Ne pas v‚rifier la capacit‚,Autoriser d‚passement capacit‚ max.,Interdire d‚passement capacit‚ max.;
                                                                    ENC=Never Check Capacity,Allow More Than Max. Capacity,Prohibit More Than Max. Cap.];
                                                   OptionString=Never Check Capacity,Allow More Than Max. Capacity,Prohibit More Than Max. Cap. }
    { 7313;   ;Open Shop Floor Bin Code;Code20    ;TableRelation=Bin.Code WHERE (Location Code=FIELD(Code));
                                                   OnValidate=VAR
                                                                WhseIntegrationMgt@1000 : Codeunit 7317;
                                                              BEGIN
                                                                WhseIntegrationMgt.CheckBinCode(Code,
                                                                  "Open Shop Floor Bin Code",
                                                                  FIELDCAPTION("Open Shop Floor Bin Code"),
                                                                  DATABASE::Location,Code);
                                                              END;

                                                   CaptionML=[ENU=Open Shop Floor Bin Code;
                                                              ESM=Ubic. abierta planta;
                                                              FRC=Code de zone atelier ouvert;
                                                              ENC=Open Shop Floor Bin Code] }
    { 7314;   ;To-Production Bin Code;Code20      ;TableRelation=Bin.Code WHERE (Location Code=FIELD(Code));
                                                   OnValidate=VAR
                                                                WhseIntegrationMgt@1000 : Codeunit 7317;
                                                              BEGIN
                                                                WhseIntegrationMgt.CheckBinCode(Code,
                                                                  "To-Production Bin Code",
                                                                  FIELDCAPTION("To-Production Bin Code"),
                                                                  DATABASE::Location,Code);
                                                              END;

                                                   CaptionML=[ENU=To-Production Bin Code;
                                                              ESM=C¢d. ubic. para producci¢n;
                                                              FRC=Code empl. des consommations;
                                                              ENC=To-Production Bin Code] }
    { 7315;   ;From-Production Bin Code;Code20    ;TableRelation=Bin.Code WHERE (Location Code=FIELD(Code));
                                                   OnValidate=VAR
                                                                WhseIntegrationMgt@1000 : Codeunit 7317;
                                                              BEGIN
                                                                WhseIntegrationMgt.CheckBinCode(Code,
                                                                  "From-Production Bin Code",
                                                                  FIELDCAPTION("From-Production Bin Code"),
                                                                  DATABASE::Location,Code);
                                                              END;

                                                   CaptionML=[ENU=From-Production Bin Code;
                                                              ESM=C¢d. ubic. desde producci¢n;
                                                              FRC=Code empl. aprŠs production;
                                                              ENC=From-Production Bin Code] }
    { 7317;   ;Adjustment Bin Code ;Code20        ;TableRelation=Bin.Code WHERE (Location Code=FIELD(Code));
                                                   OnValidate=BEGIN
                                                                IF "Adjustment Bin Code" <> xRec."Adjustment Bin Code" THEN BEGIN
                                                                  IF "Adjustment Bin Code" = '' THEN
                                                                    CheckEmptyBin(
                                                                      xRec."Adjustment Bin Code",FIELDCAPTION("Adjustment Bin Code"))
                                                                  ELSE
                                                                    CheckEmptyBin(
                                                                      "Adjustment Bin Code",FIELDCAPTION("Adjustment Bin Code"));

                                                                  CheckWhseAdjmtJnl;
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Adjustment Bin Code;
                                                              ESM=C¢d. ubicaci¢n ajuste;
                                                              FRC=Code de zone ajustement;
                                                              ENC=Adjustment Bin Code] }
    { 7319;   ;Always Create Put-away Line;Boolean;AccessByPermission=TableData 5771=R;
                                                   CaptionML=[ENU=Always Create Put-away Line;
                                                              ESM=Crea siempre l¡n. ubicaci¢n;
                                                              FRC=Toujours cr‚er ligne rangement;
                                                              ENC=Always Create Put-away Line] }
    { 7320;   ;Always Create Pick Line;Boolean    ;AccessByPermission=TableData 5771=R;
                                                   CaptionML=[ENU=Always Create Pick Line;
                                                              ESM=Crea siempre l¡n. picking;
                                                              FRC=Toujours cr‚er ligne pr‚lŠv.;
                                                              ENC=Always Create Pick Line] }
    { 7321;   ;Special Equipment   ;Option        ;AccessByPermission=TableData 5771=R;
                                                   CaptionML=[ENU=Special Equipment;
                                                              ESM=Equipo especial;
                                                              FRC=quipement sp‚cial;
                                                              ENC=Special Equipment];
                                                   OptionCaptionML=[ENU=" ,According to Bin,According to SKU/Item";
                                                                    ESM=" ,Seg£n ubicaci¢n,Seg£n Unidad almac./producto";
                                                                    FRC=" ,Selon zone,Selon point de stock/article";
                                                                    ENC=" ,According to Bin,According to SKU/Item"];
                                                   OptionString=[ ,According to Bin,According to SKU/Item] }
    { 7323;   ;Receipt Bin Code    ;Code20        ;TableRelation=Bin.Code WHERE (Location Code=FIELD(Code));
                                                   CaptionML=[ENU=Receipt Bin Code;
                                                              ESM=C¢d. ubicaci¢n recepci¢n;
                                                              FRC=Code de zone r‚ception;
                                                              ENC=Receipt Bin Code] }
    { 7325;   ;Shipment Bin Code   ;Code20        ;TableRelation=Bin.Code WHERE (Location Code=FIELD(Code));
                                                   CaptionML=[ENU=Shipment Bin Code;
                                                              ESM=C¢d. ubicaci¢n env¡o;
                                                              FRC=Code de zone livraison;
                                                              ENC=Shipment Bin Code] }
    { 7326;   ;Cross-Dock Bin Code ;Code20        ;TableRelation=Bin.Code WHERE (Location Code=FIELD(Code));
                                                   CaptionML=[ENU=Cross-Dock Bin Code;
                                                              ESM=C¢d. ubicac. tr nsito directo;
                                                              FRC=Code de zone transbordement;
                                                              ENC=Cross-Dock Bin Code] }
    { 7330;   ;To-Assembly Bin Code;Code20        ;TableRelation=Bin.Code WHERE (Location Code=FIELD(Code));
                                                   OnValidate=VAR
                                                                WhseIntegrationMgt@1000 : Codeunit 7317;
                                                              BEGIN
                                                                WhseIntegrationMgt.CheckBinCode(Code,
                                                                  "To-Assembly Bin Code",
                                                                  FIELDCAPTION("To-Assembly Bin Code"),
                                                                  DATABASE::Location,Code);
                                                              END;

                                                   CaptionML=[ENU=To-Assembly Bin Code;
                                                              ESM=C¢d. ubic. para ensamblado;
                                                              FRC=Code empl. vers assemblage;
                                                              ENC=To-Assembly Bin Code] }
    { 7331;   ;From-Assembly Bin Code;Code20      ;TableRelation=Bin.Code WHERE (Location Code=FIELD(Code));
                                                   OnValidate=VAR
                                                                WhseIntegrationMgt@1000 : Codeunit 7317;
                                                              BEGIN
                                                                WhseIntegrationMgt.CheckBinCode(Code,
                                                                  "From-Assembly Bin Code",
                                                                  FIELDCAPTION("From-Assembly Bin Code"),
                                                                  DATABASE::Location,Code);
                                                              END;

                                                   CaptionML=[ENU=From-Assembly Bin Code;
                                                              ESM=C¢d. ubic. desde ensamblado;
                                                              FRC=Code empl. depuis assemblage;
                                                              ENC=From-Assembly Bin Code] }
    { 7332;   ;Asm.-to-Order Shpt. Bin Code;Code20;TableRelation=Bin.Code WHERE (Location Code=FIELD(Code));
                                                   OnValidate=VAR
                                                                WhseIntegrationMgt@1000 : Codeunit 7317;
                                                              BEGIN
                                                                WhseIntegrationMgt.CheckBinCode(Code,
                                                                  "Asm.-to-Order Shpt. Bin Code",
                                                                  FIELDCAPTION("Asm.-to-Order Shpt. Bin Code"),
                                                                  DATABASE::Location,Code);
                                                              END;

                                                   CaptionML=[ENU=Asm.-to-Order Shpt. Bin Code;
                                                              ESM=C¢d. ubic. ens.contra-pedido;
                                                              FRC=Code empl. exp. ass. pr comm.;
                                                              ENC=Asm.-to-Order Shpt. Bin Code] }
    { 7600;   ;Base Calendar Code  ;Code10        ;TableRelation="Base Calendar";
                                                   CaptionML=[ENU=Base Calendar Code;
                                                              ESM=C¢digo calendario base;
                                                              FRC=Code calendrier principal;
                                                              ENC=Base Calendar Code] }
    { 7700;   ;Use ADCS            ;Boolean       ;AccessByPermission=TableData 7700=R;
                                                   CaptionML=[ENU=Use ADCS;
                                                              ESM=Utilizar ADCS;
                                                              FRC=Saisie automatis‚e;
                                                              ENC=Use ADCS] }
    { 10010;  ;Tax Area Code       ;Code20        ;TableRelation="Tax Area";
                                                   OnValidate=BEGIN
                                                                IF "Do Not Use For Tax Calculation" THEN
                                                                  "Tax Area Code" := '';
                                                              END;

                                                   CaptionML=[ENU=Tax Area Code;
                                                              ESM=C¢d.  rea impuesto;
                                                              FRC=Code de r‚gion fiscale;
                                                              ENC=Tax Area Code] }
    { 10015;  ;Tax Exemption No.   ;Text30        ;OnValidate=BEGIN
                                                                IF "Do Not Use For Tax Calculation" THEN
                                                                  "Tax Exemption No." := '';
                                                              END;

                                                   CaptionML=[ENU=Tax Exemption No.;
                                                              ESM=N§ exenci¢n fisc.;
                                                              FRC=Nø d'exon‚ration fiscale;
                                                              ENC=Tax Exemption No.] }
    { 10016;  ;Do Not Use For Tax Calculation;Boolean;
                                                   OnValidate=BEGIN
                                                                IF "Do Not Use For Tax Calculation" THEN BEGIN
                                                                  "Tax Area Code" := '';
                                                                  "Tax Exemption No." := '';
                                                                  "Provincial Tax Area Code" := '';
                                                                END;
                                                              END;

                                                   CaptionML=[ENU=Do Not Use For Tax Calculation;
                                                              ESM=No usar para c lculo de impuestos;
                                                              FRC=Ne pas utiliser pour le calcul des taxes;
                                                              ENC=Do Not Use For Tax Calculation] }
    { 10017;  ;Provincial Tax Area Code;Code20    ;TableRelation="Tax Area" WHERE (Country/Region=CONST(CA));
                                                   OnValidate=BEGIN
                                                                IF "Do Not Use For Tax Calculation" THEN
                                                                  "Provincial Tax Area Code" := '';
                                                              END;

                                                   CaptionML=[ENU=Provincial Tax Area Code;
                                                              ESM=C¢digo  rea impuesto provincial;
                                                              FRC=Code provincial de r‚gion fiscale;
                                                              ENC=Provincial Tax Area Code] }
  }
  KEYS
  {
    {    ;Code                                    ;Clustered=Yes }
    {    ;Name                                     }
    {    ;Use As In-Transit,Bin Mandatory          }
  }
  FIELDGROUPS
  {
  }
  CODE
  {
    VAR
      Bin@1000 : Record 7354;
      PostCode@1001 : Record 225;
      WhseSetup@1002 : Record 5769;
      InvtSetup@1003 : Record 313;
      Location@1004 : Record 14;
      CustomizedCalendarChange@1023 : Record 7602;
      Text000@1005 : TextConst 'ENU=You cannot delete the %1 %2, because they contain items.;ESM=No puede borrar el %1 %2, porque contienen productos.;FRC=Vous ne pouvez pas supprimer l''enregistrement %1 %2, car il contient des articles.;ENC=You cannot delete the %1 %2, because they contain items.';
      Text001@1006 : TextConst 'ENU=You cannot delete the %1 %2, because one or more Warehouse Activity Lines exist for this %1.;ESM=No puede borrar el %1 %2 , porque existen una o m s l¡ns. actividad almac‚n para este %1.;FRC=Vous ne pouvez pas supprimer le %1 %2, car il existe une ou plusieurs lignes Activit‚ entrep“t pour ce %1.;ENC=You cannot delete the %1 %2, because one or more Warehouse Activity Lines exist for this %1.';
      Text002@1007 : TextConst 'ENU=%1 must be Yes, because the bins contain items.;ESM=%1 tiene que ser s¡, porque las ubic. contienen prods.;FRC=La valeur du champ %1 doit ˆtre Oui, car les zones contiennent des articles.;ENC=%1 must be Yes, because the bins contain items.';
      Text003@1009 : TextConst 'ENU=Canceled.;ESM=Cancelado.;FRC=Annul‚.;ENC=Cancelled.';
      Text004@1010 : TextConst 'ENU=The total quantity of items in the warehouse is 0, but the Adjustment Bin contains a negative quantity and other bins contain a positive quantity.\;ESM=La cant. total de prods. en el alm. es 0, pero la ubic. de ajuste contiene una cantidad negativa y otras ubic. contienen una cantidad positiva.\;FRC=La quantit‚ totale d''articles dans le magasin est 0, mais la zone ajustement comporte une quantit‚ n‚gative et d''autres zones une quantit‚ positive.\;ENC=The total quantity of items in the warehouse is 0, but the Adjustment Bin contains a negative quantity and other bins contain a positive quantity.\';
      Text005@1012 : TextConst 'ENU=Do you still want to delete this %1?;ESM=¨Quiere todav¡a borrar este %1?;FRC=Souhaitez-vous quand mˆme supprimer cet enregistrement %1?;ENC=Do you still want to delete this %1?';
      Text006@1011 : TextConst 'ENU=You cannot change the %1 until the inventory stored in %2 %3 is 0.;ESM=No puede cambiar el %1 hasta que el invent. almacenado en %2 %3 sea 0.;FRC=Vous ne pouvez pas modifier la valeur du champ %1 tant que l''inventaire stock‚ dans %2 %3 est 0.;ENC=You cannot change the %1 until the inventory stored in %2 %3 is 0.';
      Text007@1013 : TextConst 'ENU=You have to delete all Adjustment Warehouse Journal Lines first before you can change the %1.;ESM=Primero debe eliminar todos los ajustes de l¡neas diario almac‚n para poder cambiar el %1.;FRC=Vous devez supprimer toutes les lignes du journal d''ajustement en entrep“t avant de pouvoir modifier la valeur du champ %1.;ENC=You have to delete all Adjustment Warehouse Journal Lines first before you can change the %1.';
      Text008@1008 : TextConst 'ENU=%1 must be %2, because one or more %3 exist.;ESM=%1 tiene que ser %2, porque uno o m s %3 existen.;FRC=%1 doit correspondre … %2, puisqu''il existe un ou plusieurs %3.;ENC=%1 must be %2, because one or more %3 exist.';
      Text009@1014 : TextConst 'ENU=You cannot change %1 because there are one or more open ledger entries on this location.;ESM=No puede cambiar %1 por que hay uno ¢ m s movs. abiertos en este almac‚n.;FRC=Vous ne pouvez pas modifier l''‚l‚ment %1, puisqu''une ou plusieurs entr‚es de grand livre sont ouvertes … cet emplacement.;ENC=You cannot change %1 because there are one or more open ledger entries on this location.';
      Text010@1015 : TextConst 'ENU=Checking item ledger entries for open entries...;ESM=Chequear movs. contab. para movs. abiertos...;FRC=Recherche d''entr‚es ouvertes dans le grand livre...;ENC=Checking item ledger entries for open entries...';
      Text011@1016 : TextConst 'ENU=You cannot change the %1 to %2 until the inventory stored in this bin is 0.;ESM=No puede cambiar %1 a %2 hasta que el valor del inventario almacenado en esta ubicaci¢n sea 0.;FRC=Vous ne pouvez pas changer la valeur du champ %1 pour %2 avant que le stock de cette zone soit … 0.;ENC=You cannot change the %1 to %2 until the inventory stored in this bin is 0.';
      Text012@1017 : TextConst 'ENU=Before you can use Online Map, you must fill in the Online Map Setup window.\See Setting Up Online Map in Help.;ESM=Para poder usar Online Map, primero debe rellenar la ventana Configuraci¢n Online Map.\Consulte Configuraci¢n de Online Map en la Ayuda.;FRC=Avant de pouvoir utiliser Online Map, vous devez compl‚ter la fenˆtre Configuration Online Map.\Consultez la section Configuration d''Online Map dans l''Aide.;ENC=Before you can use Online Map, you must fill in the Online Map Setup window.\See Setting Up Online Map in Help.';
      Text013@1018 : TextConst 'ENU=You cannot delete %1 because there are one or more ledger entries on this location.;ESM=No puede eliminar %1 porque hay uno o m s movimientos en este almac‚n.;FRC=Vous ne pouvez pas supprimer la valeur %1 car il existe une ou plusieurs ‚critures pour cette zone.;ENC=You cannot delete %1 because there are one or more ledger entries on this location.';
      Text014@1019 : TextConst 'ENU=You cannot change %1 because one or more %2 exist.;ESM=No puede cambiar %1 porque existen uno o m s %2.;FRC=Vous ne pouvez pas modifier %1 car il existe un ou plusieurs %2.;ENC=You cannot change %1 because one or more %2 exist.';
      CannotDeleteLocSKUExistErr@1021 : TextConst '@@@=%1: Field(Code);ENU=You cannot delete %1 because one or more stockkeeping units exist at this location.;ESM=No se puede eliminar %1 porque existen una o varias unidades de almacenamiento en esta ubicaci¢n.;FRC=Vous ne pouvez pas supprimer %1 car une ou plusieurs unit‚s de stock existent … cet emplacement.;ENC=You cannot delete %1 because one or more stockkeeping units exist at this location.';
      CalendarManagement@1022 : Codeunit 7600;
      UnspecifiedLocationLbl@1020 : TextConst 'ENU=(Unspecified Location);ESM=(Ubicaci¢n sin especificar);FRC=(Emplacement non sp‚cifi‚);ENC=(Unspecified Location)';

    [External]
    PROCEDURE RequireShipment@5(LocationCode@1000 : Code[10]) : Boolean;
    BEGIN
      IF Location.GET(LocationCode) THEN
        EXIT(Location."Require Shipment");
      WhseSetup.GET;
      EXIT(WhseSetup."Require Shipment");
    END;

    [External]
    PROCEDURE RequirePicking@1(LocationCode@1000 : Code[10]) : Boolean;
    BEGIN
      IF Location.GET(LocationCode) THEN
        EXIT(Location."Require Pick");
      WhseSetup.GET;
      EXIT(WhseSetup."Require Pick");
    END;

    [External]
    PROCEDURE RequireReceive@4(LocationCode@1000 : Code[10]) : Boolean;
    BEGIN
      IF Location.GET(LocationCode) THEN
        EXIT(Location."Require Receive");
      WhseSetup.GET;
      EXIT(WhseSetup."Require Receive");
    END;

    [External]
    PROCEDURE RequirePutaway@2(LocationCode@1000 : Code[10]) : Boolean;
    BEGIN
      IF Location.GET(LocationCode) THEN
        EXIT(Location."Require Put-away");
      WhseSetup.GET;
      EXIT(WhseSetup."Require Put-away");
    END;

    [External]
    PROCEDURE GetLocationSetup@3(LocationCode@1000 : Code[10];VAR Location2@1001 : Record 14) : Boolean;
    BEGIN
      IF NOT GET(LocationCode) THEN
        WITH Location2 DO BEGIN
          INIT;
          WhseSetup.GET;
          InvtSetup.GET;
          Code := LocationCode;
          "Use As In-Transit" := FALSE;
          "Require Put-away" := WhseSetup."Require Put-away";
          "Require Pick" := WhseSetup."Require Pick";
          "Outbound Whse. Handling Time" := InvtSetup."Outbound Whse. Handling Time";
          "Inbound Whse. Handling Time" := InvtSetup."Inbound Whse. Handling Time";
          "Require Receive" := WhseSetup."Require Receive";
          "Require Shipment" := WhseSetup."Require Shipment";
          EXIT(FALSE);
        END;

      Location2 := Rec;
      EXIT(TRUE);
    END;

    LOCAL PROCEDURE WMSCheckWarehouse@7300();
    VAR
      Zone@1005 : Record 7300;
      Bin@1006 : Record 7354;
      BinContent@1004 : Record 7302;
      WhseActivLine@1003 : Record 5767;
      WarehouseEntry@1002 : Record 7312;
      WarehouseEntry2@1001 : Record 7312;
      WhseJnlLine@1000 : Record 7311;
      ItemLedgerEntry@1007 : Record 32;
    BEGIN
      ItemLedgerEntry.SETRANGE("Location Code",Code);
      ItemLedgerEntry.SETRANGE(Open,TRUE);
      IF NOT ItemLedgerEntry.ISEMPTY THEN
        ERROR(Text013,Code);

      WarehouseEntry.SETRANGE("Location Code",Code);
      WarehouseEntry.CALCSUMS("Qty. (Base)");
      IF WarehouseEntry."Qty. (Base)" = 0 THEN BEGIN
        IF "Adjustment Bin Code" <> '' THEN BEGIN
          WarehouseEntry2.SETRANGE("Bin Code","Adjustment Bin Code");
          WarehouseEntry2.SETRANGE("Location Code",Code);
          WarehouseEntry2.CALCSUMS("Qty. (Base)");
          IF WarehouseEntry2."Qty. (Base)" < 0 THEN
            IF NOT CONFIRM(Text004 + Text005,FALSE,TABLECAPTION) THEN
              ERROR(Text003)
        END;
      END ELSE
        ERROR(Text000,TABLECAPTION,Code);

      WhseActivLine.SETRANGE("Location Code",Code);
      WhseActivLine.SETRANGE("Activity Type",WhseActivLine."Activity Type"::Movement);
      WhseActivLine.SETFILTER("Qty. Outstanding",'<>0');
      IF NOT WhseActivLine.ISEMPTY THEN
        ERROR(Text001,TABLECAPTION,Code);

      WhseJnlLine.SETRANGE("Location Code",Code);
      WhseJnlLine.SETFILTER(Quantity,'<>0');
      IF NOT WhseJnlLine.ISEMPTY THEN
        ERROR(Text001,TABLECAPTION,Code);

      Zone.SETRANGE("Location Code",Code);
      Zone.DELETEALL;
      Bin.SETRANGE("Location Code",Code);
      Bin.DELETEALL;
      BinContent.SETRANGE("Location Code",Code);
      BinContent.DELETEALL;
    END;

    LOCAL PROCEDURE CheckEmptyBin@7302(BinCode@1001 : Code[20];CaptionOfField@1002 : Text[30]);
    VAR
      WarehouseEntry@1003 : Record 7312;
      WhseEntry2@1000 : Record 7312;
    BEGIN
      WarehouseEntry.SETCURRENTKEY("Bin Code","Location Code","Item No.");
      WarehouseEntry.SETRANGE("Bin Code",BinCode);
      WarehouseEntry.SETRANGE("Location Code",Code);
      IF WarehouseEntry.FINDFIRST THEN
        REPEAT
          WarehouseEntry.SETRANGE("Item No.",WarehouseEntry."Item No.");

          WhseEntry2.SETCURRENTKEY("Item No.","Bin Code","Location Code");
          WhseEntry2.COPYFILTERS(WarehouseEntry);
          WhseEntry2.CALCSUMS("Qty. (Base)");
          IF WhseEntry2."Qty. (Base)" <> 0 THEN BEGIN
            IF (BinCode = "Adjustment Bin Code") AND (xRec."Adjustment Bin Code" = '') THEN
              ERROR(Text011,CaptionOfField,BinCode);

            ERROR(Text006,CaptionOfField,Bin.TABLECAPTION,BinCode);
          END;

          WarehouseEntry.FINDLAST;
          WarehouseEntry.SETRANGE("Item No.");
        UNTIL WarehouseEntry.NEXT = 0;
    END;

    LOCAL PROCEDURE CheckWhseAdjmtJnl@7303();
    VAR
      WhseJnlTemplate@1002 : Record 7309;
      WhseJnlLine@1003 : Record 7311;
    BEGIN
      WhseJnlTemplate.SETRANGE(Type,WhseJnlTemplate.Type::Item);
      IF WhseJnlTemplate.FIND('-') THEN
        REPEAT
          WhseJnlLine.SETRANGE("Journal Template Name",WhseJnlTemplate.Name);
          WhseJnlLine.SETRANGE("Location Code",Code);
          IF NOT WhseJnlLine.ISEMPTY THEN
            ERROR(
              Text007,
              FIELDCAPTION("Adjustment Bin Code"));
        UNTIL WhseJnlTemplate.NEXT = 0;
    END;

    [External]
    PROCEDURE GetRequirementText@6(FieldNumber@1000 : Integer) : Text[50];
    VAR
      Text000@1002 : TextConst 'ENU=Shipment,Receive,Pick,Put-Away;ESM=Env¡o,Recibir,Picking,Ubicar;FRC=Livrer,Recevoir,Pr‚lever,Classer;ENC=Shipment,Receive,Pick,Put-Away';
    BEGIN
      CASE FieldNumber OF
        FIELDNO("Require Shipment"):
          EXIT(SELECTSTR(1,Text000));
        FIELDNO("Require Receive"):
          EXIT(SELECTSTR(2,Text000));
        FIELDNO("Require Pick"):
          EXIT(SELECTSTR(3,Text000));
        FIELDNO("Require Put-away"):
          EXIT(SELECTSTR(4,Text000));
      END;
    END;

    [External]
    PROCEDURE DisplayMap@7();
    VAR
      MapPoint@1001 : Record 800;
      MapMgt@1000 : Codeunit 802;
    BEGIN
      IF MapPoint.FINDFIRST THEN
        MapMgt.MakeSelection(DATABASE::Location,GETPOSITION)
      ELSE
        MESSAGE(Text012);
    END;

    [External]
    PROCEDURE IsBWReceive@8() : Boolean;
    BEGIN
      EXIT("Bin Mandatory" AND (NOT "Directed Put-away and Pick") AND "Require Receive");
    END;

    [External]
    PROCEDURE IsBWShip@12() : Boolean;
    BEGIN
      EXIT("Bin Mandatory" AND (NOT "Directed Put-away and Pick") AND "Require Shipment");
    END;

    [External]
    PROCEDURE IsBinBWReceiveOrShip@11(BinCode@1000 : Code[20]) : Boolean;
    BEGIN
      EXIT(("Receipt Bin Code" <> '') AND (BinCode = "Receipt Bin Code") OR
        ("Shipment Bin Code" <> '') AND (BinCode = "Shipment Bin Code"));
    END;

    [External]
    PROCEDURE IsInTransit@10(LocationCode@1000 : Code[10]) : Boolean;
    BEGIN
      IF Location.GET(LocationCode) THEN
        EXIT(Location."Use As In-Transit");
      EXIT(FALSE);
    END;

    LOCAL PROCEDURE CreateInboundWhseRequest@13();
    VAR
      TransferHeader@1002 : Record 5740;
      TransferLine@1004 : Record 5741;
      WarehouseRequest@1000 : Record 5765;
      WhseTransferRelease@1003 : Codeunit 5773;
    BEGIN
      TransferLine.SETRANGE("Transfer-to Code",Code);
      IF TransferLine.FINDSET THEN
        REPEAT
          IF TransferLine."Quantity Received" <> TransferLine."Quantity Shipped" THEN BEGIN
            TransferHeader.GET(TransferLine."Document No.");
            WhseTransferRelease.InitializeWhseRequest(WarehouseRequest,TransferHeader,TransferHeader.Status);
            WhseTransferRelease.CreateInboundWhseRequest(WarehouseRequest,TransferHeader);

            TransferLine.SETRANGE("Document No.",TransferLine."Document No.");
            TransferLine.FINDLAST;
            TransferLine.SETRANGE("Document No.");
          END;
        UNTIL TransferLine.NEXT = 0;
    END;

    [External]
    PROCEDURE GetLocationsIncludingUnspecifiedLocation@14(IncludeOnlyUnspecifiedLocation@1001 : Boolean;ExcludeInTransitLocations@1000 : Boolean);
    VAR
      Location@1002 : Record 14;
    BEGIN
      INIT;
      VALIDATE(Name,UnspecifiedLocationLbl);
      INSERT;

      IF NOT IncludeOnlyUnspecifiedLocation THEN BEGIN
        IF ExcludeInTransitLocations THEN
          Location.SETRANGE("Use As In-Transit",FALSE);

        IF Location.FINDSET THEN
          REPEAT
            INIT;
            COPY(Location);
            INSERT;
          UNTIL Location.NEXT = 0;
      END;

      FINDFIRST;
    END;

    BEGIN
    END.
  }
}